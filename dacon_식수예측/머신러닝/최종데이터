{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"최종데이터","provenance":[{"file_id":"1TZLyiVeHUvHhzHVd2JfpGZutCbA-4dbE","timestamp":1658592418910}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["# 한글 폰트 설정\n","# 한글 폰트 설치 코드\n","!apt-get update -qq\n","!apt-get install fonts-nanum* -qq\n","# 설치 후 런타임 재시작 필요"],"metadata":{"id":"dVucejDexK1C","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1659097397880,"user_tz":-540,"elapsed":31128,"user":{"displayName":"박민영","userId":"10245341556491319616"}},"outputId":"c71665ca-01e0-44f3-8f2a-72ee887228a6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Selecting previously unselected package fonts-nanum.\n","(Reading database ... 155653 files and directories currently installed.)\n","Preparing to unpack .../fonts-nanum_20170925-1_all.deb ...\n","Unpacking fonts-nanum (20170925-1) ...\n","Selecting previously unselected package fonts-nanum-eco.\n","Preparing to unpack .../fonts-nanum-eco_1.000-6_all.deb ...\n","Unpacking fonts-nanum-eco (1.000-6) ...\n","Selecting previously unselected package fonts-nanum-extra.\n","Preparing to unpack .../fonts-nanum-extra_20170925-1_all.deb ...\n","Unpacking fonts-nanum-extra (20170925-1) ...\n","Selecting previously unselected package fonts-nanum-coding.\n","Preparing to unpack .../fonts-nanum-coding_2.5-1_all.deb ...\n","Unpacking fonts-nanum-coding (2.5-1) ...\n","Setting up fonts-nanum-extra (20170925-1) ...\n","Setting up fonts-nanum (20170925-1) ...\n","Setting up fonts-nanum-coding (2.5-1) ...\n","Setting up fonts-nanum-eco (1.000-6) ...\n","Processing triggers for fontconfig (2.12.6-0ubuntu2) ...\n"]}]},{"cell_type":"code","source":["# 한글폰트 사용 in colab\n","%matplotlib inline  \n","\n","import matplotlib as mpl \n","import matplotlib.pyplot as plt \n","import matplotlib.font_manager as fm  \n","\n","path = '/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf' \n","font_name = fm.FontProperties(fname=path, size=10).get_name()\n","print(font_name)\n","plt.rc('font', family=font_name)\n","\n","fm._rebuild()\n","mpl.rcParams['axes.unicode_minus'] = False"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5SFJda3UxPKZ","executionInfo":{"status":"ok","timestamp":1659098731950,"user_tz":-540,"elapsed":493,"user":{"displayName":"박민영","userId":"10245341556491319616"}},"outputId":"a6b13dc1-af1e-4af4-e909-3ae82b96fcbf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["NanumBarunGothic\n"]}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vSGJvyUX6mGr","executionInfo":{"status":"ok","timestamp":1659098734021,"user_tz":-540,"elapsed":2079,"user":{"displayName":"박민영","userId":"10245341556491319616"}},"outputId":"7d4443de-cf41-47e5-e9f5-5a92c03755b7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":582},"id":"2hvxXBfrUPOV","executionInfo":{"status":"ok","timestamp":1659098734022,"user_tz":-540,"elapsed":27,"user":{"displayName":"박민영","userId":"10245341556491319616"}},"outputId":"128432b6-e62a-40bd-d620-2a0f173aa172"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["           일자 요일  본사정원수  본사휴가자수  본사출장자수  본사시간외근무명령서승인건수  현본사소속재택근무자수     중식계  \\\n","0  2016-02-01  월   2601      50     150             238          0.0  1039.0   \n","1  2016-02-02  화   2601      50     173             319          0.0   867.0   \n","2  2016-02-03  수   2601      56     180             111          0.0  1017.0   \n","3  2016-02-04  목   2601     104     220             355          0.0   978.0   \n","4  2016-02-05  금   2601     278     181              34          0.0   925.0   \n","\n","     석식계  break_score  lunch_score  dinner_score    출근자수      야근비율  \n","0  331.0            0            4             4  2401.0  0.091503  \n","1  560.0            0           12             8  2378.0  0.122645  \n","2  573.0            0            5             4  2365.0  0.042676  \n","3  525.0            0            9             5  2277.0  0.136486  \n","4  330.0            0            5            12  2142.0  0.013072  "],"text/html":["\n","  <div id=\"df-c5304deb-eae1-4cad-8278-3d75ca131463\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>일자</th>\n","      <th>요일</th>\n","      <th>본사정원수</th>\n","      <th>본사휴가자수</th>\n","      <th>본사출장자수</th>\n","      <th>본사시간외근무명령서승인건수</th>\n","      <th>현본사소속재택근무자수</th>\n","      <th>중식계</th>\n","      <th>석식계</th>\n","      <th>break_score</th>\n","      <th>lunch_score</th>\n","      <th>dinner_score</th>\n","      <th>출근자수</th>\n","      <th>야근비율</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2016-02-01</td>\n","      <td>월</td>\n","      <td>2601</td>\n","      <td>50</td>\n","      <td>150</td>\n","      <td>238</td>\n","      <td>0.0</td>\n","      <td>1039.0</td>\n","      <td>331.0</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>2401.0</td>\n","      <td>0.091503</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2016-02-02</td>\n","      <td>화</td>\n","      <td>2601</td>\n","      <td>50</td>\n","      <td>173</td>\n","      <td>319</td>\n","      <td>0.0</td>\n","      <td>867.0</td>\n","      <td>560.0</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>8</td>\n","      <td>2378.0</td>\n","      <td>0.122645</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2016-02-03</td>\n","      <td>수</td>\n","      <td>2601</td>\n","      <td>56</td>\n","      <td>180</td>\n","      <td>111</td>\n","      <td>0.0</td>\n","      <td>1017.0</td>\n","      <td>573.0</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>2365.0</td>\n","      <td>0.042676</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2016-02-04</td>\n","      <td>목</td>\n","      <td>2601</td>\n","      <td>104</td>\n","      <td>220</td>\n","      <td>355</td>\n","      <td>0.0</td>\n","      <td>978.0</td>\n","      <td>525.0</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>5</td>\n","      <td>2277.0</td>\n","      <td>0.136486</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2016-02-05</td>\n","      <td>금</td>\n","      <td>2601</td>\n","      <td>278</td>\n","      <td>181</td>\n","      <td>34</td>\n","      <td>0.0</td>\n","      <td>925.0</td>\n","      <td>330.0</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>12</td>\n","      <td>2142.0</td>\n","      <td>0.013072</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c5304deb-eae1-4cad-8278-3d75ca131463')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c5304deb-eae1-4cad-8278-3d75ca131463 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c5304deb-eae1-4cad-8278-3d75ca131463');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":20}],"source":["import pandas as pd\n","plt.rcParams['axes.unicode_minus'] = False # 마이너스 표시\n","# 데이터 불러오기\n","data = pd.read_csv('/content/drive/MyDrive/데이터분석 스터디/data/data_add_score.csv')\n","submission = pd.read_csv('/content/drive/MyDrive/데이터분석 스터디/data/sample_submission.csv')\n","\n","data['출근자수'] = data['본사정원수'] - data['본사휴가자수'] - data['본사출장자수'] - data['현본사소속재택근무자수']\n","data['야근비율'] = data['본사시간외근무명령서승인건수'] / data['본사정원수']\n","\n","train = data.iloc[:1204] \n","test = data.iloc[1204:]\n","\n","train.head()"]},{"cell_type":"code","source":["# 변수 선택\n","x_train = train[['요일', '출근자수', '야근비율', 'lunch_score', 'dinner_score']]\n","x_test = test[['요일', '출근자수', '야근비율', 'lunch_score', 'dinner_score']]\n","x_train = pd.get_dummies(x_train, columns = ['요일'])\n","x_test = pd.get_dummies(x_test, columns = ['요일'])\n","# x_train['요일'] = x_train['요일'].map({'월':0, '화':1, '수':2, '목':3, '금':4})\n","# x_test['요일'] = x_test['요일'].map({'월':0, '화':1, '수':2, '목':3, '금':4})"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0q3E9EjQ78uf","executionInfo":{"status":"ok","timestamp":1659098734024,"user_tz":-540,"elapsed":22,"user":{"displayName":"박민영","userId":"10245341556491319616"}},"outputId":"7ec696d4-fed4-417e-9d57-dcc4f5cee2d2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:6: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:7: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  import sys\n"]}]},{"cell_type":"code","source":["y1_train = train['중식계']\n","y2_train = train['석식계']"],"metadata":{"id":"LBplwnmV7gwp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","from sklearn.ensemble import RandomForestRegressor"],"metadata":{"id":"FdXEjbjZU56Y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 점심/저녁 식수 인원 예측할 모델 2개 생성\n","rf_lunch = RandomForestRegressor(n_jobs=-1, random_state=42)\n","rf_dinner = RandomForestRegressor(n_jobs=-1, random_state=42)"],"metadata":{"id":"nCE0_ERKVmzT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 학습\n","rf_lunch.fit(x_train, y1_train)\n","rf_dinner.fit(x_train, y2_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wmYbPKcqVp3f","executionInfo":{"status":"ok","timestamp":1659098735018,"user_tz":-540,"elapsed":1007,"user":{"displayName":"박민영","userId":"10245341556491319616"}},"outputId":"00d055a7-96d9-46b4-ecc4-918a1a8ffe59"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestRegressor(n_jobs=-1, random_state=42)"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["# 추론\n","pred1 = rf_lunch.predict(x_test)  \n","pred2 = rf_dinner.predict(x_test)"],"metadata":{"id":"VUD5iE57Vrgp"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 피처 중요도 확인"],"metadata":{"id":"RFsiUUb1wfbQ"}},{"cell_type":"code","source":["import seaborn as sns\n","\n","importances_values = rf_lunch.feature_importances_\n","importances = pd.Series(importances_values, index=x_train.columns)\n","top20 = importances.sort_values(ascending=False)[:20]\n","plt.figure(figsize=(8, 6))\n","plt.title('Feature importances Top 20 in rf_lunch')\n","sns.barplot(x = top20, y = top20.index)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":390},"id":"xgIYxXE_wex3","executionInfo":{"status":"ok","timestamp":1659098735622,"user_tz":-540,"elapsed":612,"user":{"displayName":"박민영","userId":"10245341556491319616"}},"outputId":"26511a56-60a9-49e7-dfb4-0b5ad07751f0"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 576x432 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["import seaborn as sns\n","\n","importances_values = rf_dinner.feature_importances_\n","importances = pd.Series(importances_values, index=x_train.columns)\n","top20 = importances.sort_values(ascending=False)[:20]\n","plt.figure(figsize=(8, 6))\n","plt.title('Feature importances Top 20 in rf_dinner')\n","sns.barplot(x = top20, y = top20.index)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":390},"id":"HG0nQo9pwvnC","executionInfo":{"status":"ok","timestamp":1659098736166,"user_tz":-540,"elapsed":550,"user":{"displayName":"박민영","userId":"10245341556491319616"}},"outputId":"bdfb03fb-2415-4d6b-cae4-ffa4951ecf23"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 576x432 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# 결과 제출\n","submission['중식계'] = pred1\n","submission['석식계'] = pred2"],"metadata":{"id":"YSaU5oEZV0dc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["submission.to_csv('/content/drive/MyDrive/데이터분석 스터디/data/baseline+score+feature_selection.csv', index=False)"],"metadata":{"id":"rWytqnkoV2wq"},"execution_count":null,"outputs":[]}]}