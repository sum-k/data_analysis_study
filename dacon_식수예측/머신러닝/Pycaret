{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Pycaret","provenance":[{"file_id":"1TZLyiVeHUvHhzHVd2JfpGZutCbA-4dbE","timestamp":1658592418910}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"62946fae7b1f46639dc1ed66b199ff85":{"model_module":"@jupyter-widgets/controls","model_name":"IntProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"IntProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"Processing: ","description_tooltip":null,"layout":"IPY_MODEL_9c29a6209a664eda84138dbb3d30e0ec","max":3,"min":0,"orientation":"horizontal","style":"IPY_MODEL_f1dde553a98e418a98614d5acc2b66ff","value":3}},"9c29a6209a664eda84138dbb3d30e0ec":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f1dde553a98e418a98614d5acc2b66ff":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"082ac046e01343e58ef24edc017f1f69":{"model_module":"@jupyter-widgets/controls","model_name":"TextModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"TextModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"TextView","continuous_update":true,"description":"","description_tooltip":null,"disabled":false,"layout":"IPY_MODEL_d8e835190c8947d4b44f95be8c45d568","placeholder":"​","style":"IPY_MODEL_9701940361764c8c99e6d559c01eedf5","value":"Following data types have been inferred automatically, if they are correct press enter to continue or type 'quit' otherwise."}},"d8e835190c8947d4b44f95be8c45d568":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"100%"}},"9701940361764c8c99e6d559c01eedf5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"098a796cfd6048b696984c2f8c8760c2":{"model_module":"@jupyter-widgets/controls","model_name":"IntProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"IntProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"Processing: ","description_tooltip":null,"layout":"IPY_MODEL_a6cc6d89fb504dc8a8ef466a2382fbb9","max":94,"min":0,"orientation":"horizontal","style":"IPY_MODEL_34a07b8add3f4f53a30467a6324f1d0b","value":94}},"a6cc6d89fb504dc8a8ef466a2382fbb9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"34a07b8add3f4f53a30467a6324f1d0b":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"b6415767ab49488286e6de2f1303ece9":{"model_module":"@jupyter-widgets/controls","model_name":"IntProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"IntProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"Processing: ","description_tooltip":null,"layout":"IPY_MODEL_6be709210a95406bbb44803ef4fef051","max":6,"min":0,"orientation":"horizontal","style":"IPY_MODEL_efc55fbc6e834ff8ab4b6f1baa57c804","value":6}},"6be709210a95406bbb44803ef4fef051":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"efc55fbc6e834ff8ab4b6f1baa57c804":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"0a37df5b79544025a7c527a203eafafb":{"model_module":"@jupyter-widgets/controls","model_name":"IntProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"IntProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"Processing: ","description_tooltip":null,"layout":"IPY_MODEL_cebd80cbfaad4ec498aeecfbc138c48d","max":3,"min":0,"orientation":"horizontal","style":"IPY_MODEL_02fc008a45fe41a28ba21ddfba865a81","value":3}},"cebd80cbfaad4ec498aeecfbc138c48d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"02fc008a45fe41a28ba21ddfba865a81":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"8cd42206c8a444c28a0551e76d25b70b":{"model_module":"@jupyter-widgets/controls","model_name":"TextModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"TextModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"TextView","continuous_update":true,"description":"","description_tooltip":null,"disabled":false,"layout":"IPY_MODEL_446384ec993b4288b295ac2cebbb1238","placeholder":"​","style":"IPY_MODEL_cea4e332aed341b1a11f4017c31d111f","value":"Following data types have been inferred automatically, if they are correct press enter to continue or type 'quit' otherwise."}},"446384ec993b4288b295ac2cebbb1238":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"100%"}},"cea4e332aed341b1a11f4017c31d111f":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"80b8ac1a72e74b7e9c29922382b29c64":{"model_module":"@jupyter-widgets/controls","model_name":"IntProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"IntProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"Processing: ","description_tooltip":null,"layout":"IPY_MODEL_c5032db5b26241bd8ca5e8460bcec7a3","max":94,"min":0,"orientation":"horizontal","style":"IPY_MODEL_91c7b4075dc141f9a3d721d64c8df060","value":94}},"c5032db5b26241bd8ca5e8460bcec7a3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"91c7b4075dc141f9a3d721d64c8df060":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"5310c39baf6642afb36b47f3bf0b1a76":{"model_module":"@jupyter-widgets/controls","model_name":"IntProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"IntProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"Processing: ","description_tooltip":null,"layout":"IPY_MODEL_eca08a83f2db4892b7f70de47deeac58","max":6,"min":0,"orientation":"horizontal","style":"IPY_MODEL_7ac9a4bf8a48437486c949c374acadab","value":6}},"eca08a83f2db4892b7f70de47deeac58":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7ac9a4bf8a48437486c949c374acadab":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}}}}},"cells":[{"cell_type":"code","source":["# 한글 폰트 설정\n","# 한글 폰트 설치 코드\n","#!apt-get update -qq\n","#!apt-get install fonts-nanum* -qq\n","# 설치 후 런타임 재시작 필요"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dVucejDexK1C","executionInfo":{"status":"ok","timestamp":1660045650949,"user_tz":-540,"elapsed":24685,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"697d743e-1ec1-43df-905a-6dd226cbcc2a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Selecting previously unselected package fonts-nanum.\n","(Reading database ... 155680 files and directories currently installed.)\n","Preparing to unpack .../fonts-nanum_20170925-1_all.deb ...\n","Unpacking fonts-nanum (20170925-1) ...\n","Selecting previously unselected package fonts-nanum-eco.\n","Preparing to unpack .../fonts-nanum-eco_1.000-6_all.deb ...\n","Unpacking fonts-nanum-eco (1.000-6) ...\n","Selecting previously unselected package fonts-nanum-extra.\n","Preparing to unpack .../fonts-nanum-extra_20170925-1_all.deb ...\n","Unpacking fonts-nanum-extra (20170925-1) ...\n","Selecting previously unselected package fonts-nanum-coding.\n","Preparing to unpack .../fonts-nanum-coding_2.5-1_all.deb ...\n","Unpacking fonts-nanum-coding (2.5-1) ...\n","Setting up fonts-nanum-extra (20170925-1) ...\n","Setting up fonts-nanum (20170925-1) ...\n","Setting up fonts-nanum-coding (2.5-1) ...\n","Setting up fonts-nanum-eco (1.000-6) ...\n","Processing triggers for fontconfig (2.12.6-0ubuntu2) ...\n"]}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rCwTBmbr6hCa","executionInfo":{"status":"ok","timestamp":1660048070592,"user_tz":-540,"elapsed":55968,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"633c63c5-8fdc-477f-9d10-d7ed9618f3dc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["# 한글폰트 사용 in colab\n","%matplotlib inline  \n","\n","import matplotlib as mpl \n","import matplotlib.pyplot as plt \n","import matplotlib.font_manager as fm  \n","\n","path = '/content/drive/MyDrive/데이터분석 스터디/data/NanumBarunGothic.ttf'\n","font_name = fm.FontProperties(fname=path, size=10).get_name()\n","print(font_name)\n","plt.rc('font', family=font_name)\n","\n","fm._rebuild()\n","mpl.rcParams['axes.unicode_minus'] = False"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5SFJda3UxPKZ","executionInfo":{"status":"ok","timestamp":1660049495690,"user_tz":-540,"elapsed":799,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"9db75073-37b2-497f-81f1-64866d721eef"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["NanumBarunGothic\n"]}]},{"cell_type":"code","source":["#!pip install pycaret\n","!pip install markupsafe==2.0.1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":329},"id":"znnzgoT7l7Yu","executionInfo":{"status":"ok","timestamp":1660049327890,"user_tz":-540,"elapsed":9096,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"4937750c-fa4c-4d1e-83b3-0359c1da8251"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting markupsafe==2.0.1\n","  Downloading MarkupSafe-2.0.1-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (31 kB)\n","Installing collected packages: markupsafe\n","  Attempting uninstall: markupsafe\n","    Found existing installation: MarkupSafe 2.1.1\n","    Uninstalling MarkupSafe-2.1.1:\n","      Successfully uninstalled MarkupSafe-2.1.1\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","pandas-profiling 3.2.0 requires markupsafe~=2.1.1, but you have markupsafe 2.0.1 which is incompatible.\u001b[0m\n","Successfully installed markupsafe-2.0.1\n"]},{"output_type":"display_data","data":{"application/vnd.colab-display-data+json":{"pip_warning":{"packages":["markupsafe"]}}},"metadata":{}}]},{"cell_type":"code","source":["import jinja2\n","from pycaret.regression import *"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ytFYqIObnAfF","executionInfo":{"status":"ok","timestamp":1660049363322,"user_tz":-540,"elapsed":4964,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"6fd97746-710d-463c-c4f5-3882544ffaf1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/distributed/config.py:20: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.\n","  defaults = yaml.load(f)\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import explained_variance_score"],"metadata":{"id":"FdXEjbjZU56Y"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":582},"id":"2hvxXBfrUPOV","executionInfo":{"status":"ok","timestamp":1660049502061,"user_tz":-540,"elapsed":365,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"4b3cdfd1-c6b5-430c-c517-12b1489bd262"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["           일자 요일  본사정원수  본사휴가자수  본사출장자수  본사시간외근무명령서승인건수  현본사소속재택근무자수     중식계  \\\n","0  2016-02-01  월   2601      50     150             238          0.0  1039.0   \n","1  2016-02-02  화   2601      50     173             319          0.0   867.0   \n","2  2016-02-03  수   2601      56     180             111          0.0  1017.0   \n","3  2016-02-04  목   2601     104     220             355          0.0   978.0   \n","4  2016-02-05  금   2601     278     181              34          0.0   925.0   \n","\n","     석식계  break_score  lunch_score  dinner_score    출근자수      야근비율  \n","0  331.0            0            4             4  2401.0  0.091503  \n","1  560.0            0           12             8  2378.0  0.122645  \n","2  573.0            0            5             4  2365.0  0.042676  \n","3  525.0            0            9             5  2277.0  0.136486  \n","4  330.0            0            5            12  2142.0  0.013072  "],"text/html":["\n","  <div id=\"df-5d52e416-5e23-459b-acc4-9342c285306a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>일자</th>\n","      <th>요일</th>\n","      <th>본사정원수</th>\n","      <th>본사휴가자수</th>\n","      <th>본사출장자수</th>\n","      <th>본사시간외근무명령서승인건수</th>\n","      <th>현본사소속재택근무자수</th>\n","      <th>중식계</th>\n","      <th>석식계</th>\n","      <th>break_score</th>\n","      <th>lunch_score</th>\n","      <th>dinner_score</th>\n","      <th>출근자수</th>\n","      <th>야근비율</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2016-02-01</td>\n","      <td>월</td>\n","      <td>2601</td>\n","      <td>50</td>\n","      <td>150</td>\n","      <td>238</td>\n","      <td>0.0</td>\n","      <td>1039.0</td>\n","      <td>331.0</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>2401.0</td>\n","      <td>0.091503</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2016-02-02</td>\n","      <td>화</td>\n","      <td>2601</td>\n","      <td>50</td>\n","      <td>173</td>\n","      <td>319</td>\n","      <td>0.0</td>\n","      <td>867.0</td>\n","      <td>560.0</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>8</td>\n","      <td>2378.0</td>\n","      <td>0.122645</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2016-02-03</td>\n","      <td>수</td>\n","      <td>2601</td>\n","      <td>56</td>\n","      <td>180</td>\n","      <td>111</td>\n","      <td>0.0</td>\n","      <td>1017.0</td>\n","      <td>573.0</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>2365.0</td>\n","      <td>0.042676</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2016-02-04</td>\n","      <td>목</td>\n","      <td>2601</td>\n","      <td>104</td>\n","      <td>220</td>\n","      <td>355</td>\n","      <td>0.0</td>\n","      <td>978.0</td>\n","      <td>525.0</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>5</td>\n","      <td>2277.0</td>\n","      <td>0.136486</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2016-02-05</td>\n","      <td>금</td>\n","      <td>2601</td>\n","      <td>278</td>\n","      <td>181</td>\n","      <td>34</td>\n","      <td>0.0</td>\n","      <td>925.0</td>\n","      <td>330.0</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>12</td>\n","      <td>2142.0</td>\n","      <td>0.013072</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5d52e416-5e23-459b-acc4-9342c285306a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5d52e416-5e23-459b-acc4-9342c285306a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5d52e416-5e23-459b-acc4-9342c285306a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}],"source":["import pandas as pd\n","plt.rcParams['axes.unicode_minus'] = False # 마이너스 표시\n","# 데이터 불러오기\n","data = pd.read_csv('/content/drive/MyDrive/데이터분석 스터디/data/data_add_score.csv')\n","submission = pd.read_csv('/content/drive/MyDrive/데이터분석 스터디/data/sample_submission.csv')\n","\n","data['출근자수'] = data['본사정원수'] - data['본사휴가자수'] - data['본사출장자수'] - data['현본사소속재택근무자수']\n","data['야근비율'] = data['본사시간외근무명령서승인건수'] / data['본사정원수']\n","\n","train = data.iloc[:1204] \n","test = data.iloc[1204:]\n","\n","train.head()"]},{"cell_type":"code","source":["# 중식계 예측 변수 선택\n","ln_train = train[['요일', '출근자수', '야근비율', 'lunch_score', 'dinner_score','중식계']]\n","ln_test = test[['요일', '출근자수', '야근비율', 'lunch_score', 'dinner_score']]\n","ln_train['요일'] = ln_train['요일'].map({'월':0, '화':1, '수':2, '목':3, '금':4})\n","ln_test['요일'] = ln_test['요일'].map({'월':0, '화':1, '수':2, '목':3, '금':4})"],"metadata":{"id":"2T21mzpeVe6e"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 석식계 예측 변수 선택\n","dn_train = train[['요일', '출근자수', '야근비율', 'lunch_score', 'dinner_score','석식계']]\n","dn_test = test[['요일', '출근자수', '야근비율', 'lunch_score', 'dinner_score']]\n","dn_train['요일'] = dn_train['요일'].map({'월':0, '화':1, '수':2, '목':3, '금':4})\n","dn_test['요일'] = dn_test['요일'].map({'월':0, '화':1, '수':2, '목':3, '금':4})"],"metadata":{"id":"3EoYHcPvrIrK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ln_test.reset_index(inplace=True)\n","dn_test.reset_index(inplace=True)"],"metadata":{"id":"KjlaybyY4i45"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ln_train.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J5N7Qbv4oDQE","executionInfo":{"status":"ok","timestamp":1660053331580,"user_tz":-540,"elapsed":319,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"279ff561-fb94-4613-cf2f-7a2043cafd94"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['요일', '출근자수', '야근비율', 'lunch_score', 'dinner_score', '중식계'], dtype='object')"]},"metadata":{},"execution_count":39}]},{"cell_type":"markdown","source":["### 중식계 Pycaret"],"metadata":{"id":"WFQlya0AsKiI"}},{"cell_type":"code","source":["r_ln = setup(data=ln_train, target='중식계', session_id=6088)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["62946fae7b1f46639dc1ed66b199ff85","9c29a6209a664eda84138dbb3d30e0ec","f1dde553a98e418a98614d5acc2b66ff","082ac046e01343e58ef24edc017f1f69","d8e835190c8947d4b44f95be8c45d568","9701940361764c8c99e6d559c01eedf5"]},"id":"r1Yip-ESomv-","executionInfo":{"status":"ok","timestamp":1660053339564,"user_tz":-540,"elapsed":6444,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"4abad7f0-b55d-49e1-8579-65415d5f73ed"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["                               Description             Value\n","0                               session_id              6088\n","1                                   Target               중식계\n","2                            Original Data         (1204, 6)\n","3                           Missing Values             False\n","4                         Numeric Features                 2\n","5                     Categorical Features                 3\n","6                         Ordinal Features             False\n","7                High Cardinality Features             False\n","8                  High Cardinality Method              None\n","9                    Transformed Train Set         (842, 46)\n","10                    Transformed Test Set         (362, 46)\n","11                      Shuffle Train-Test              True\n","12                     Stratify Train-Test             False\n","13                          Fold Generator             KFold\n","14                             Fold Number                10\n","15                                CPU Jobs                -1\n","16                                 Use GPU             False\n","17                          Log Experiment             False\n","18                         Experiment Name  reg-default-name\n","19                                     USI              ed32\n","20                         Imputation Type            simple\n","21          Iterative Imputation Iteration              None\n","22                         Numeric Imputer              mean\n","23      Iterative Imputation Numeric Model              None\n","24                     Categorical Imputer          constant\n","25  Iterative Imputation Categorical Model              None\n","26           Unknown Categoricals Handling    least_frequent\n","27                               Normalize             False\n","28                        Normalize Method              None\n","29                          Transformation             False\n","30                   Transformation Method              None\n","31                                     PCA             False\n","32                              PCA Method              None\n","33                          PCA Components              None\n","34                     Ignore Low Variance             False\n","35                     Combine Rare Levels             False\n","36                    Rare Level Threshold              None\n","37                         Numeric Binning             False\n","38                         Remove Outliers             False\n","39                      Outliers Threshold              None\n","40                Remove Multicollinearity             False\n","41             Multicollinearity Threshold              None\n","42             Remove Perfect Collinearity              True\n","43                              Clustering             False\n","44                    Clustering Iteration              None\n","45                     Polynomial Features             False\n","46                       Polynomial Degree              None\n","47                    Trignometry Features             False\n","48                    Polynomial Threshold              None\n","49                          Group Features             False\n","50                       Feature Selection             False\n","51                Feature Selection Method           classic\n","52            Features Selection Threshold              None\n","53                     Feature Interaction             False\n","54                           Feature Ratio             False\n","55                   Interaction Threshold              None\n","56                        Transform Target             False\n","57                 Transform Target Method           box-cox"],"text/html":["\n","  <div id=\"df-42d00438-3d3d-434a-a8a6-52f66bc301bf\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Description</th>\n","      <th>Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>session_id</td>\n","      <td>6088</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Target</td>\n","      <td>중식계</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Original Data</td>\n","      <td>(1204, 6)</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Missing Values</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Numeric Features</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Categorical Features</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Ordinal Features</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>High Cardinality Features</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>High Cardinality Method</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Transformed Train Set</td>\n","      <td>(842, 46)</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Transformed Test Set</td>\n","      <td>(362, 46)</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Shuffle Train-Test</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Stratify Train-Test</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Fold Generator</td>\n","      <td>KFold</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Fold Number</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>CPU Jobs</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Use GPU</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Log Experiment</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Experiment Name</td>\n","      <td>reg-default-name</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>USI</td>\n","      <td>ed32</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>Imputation Type</td>\n","      <td>simple</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>Iterative Imputation Iteration</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>Numeric Imputer</td>\n","      <td>mean</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Iterative Imputation Numeric Model</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>Categorical Imputer</td>\n","      <td>constant</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>Iterative Imputation Categorical Model</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Unknown Categoricals Handling</td>\n","      <td>least_frequent</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>Normalize</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>Normalize Method</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>Transformation</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>Transformation Method</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>PCA</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>PCA Method</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>PCA Components</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>Ignore Low Variance</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>Combine Rare Levels</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>Rare Level Threshold</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>Numeric Binning</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>Remove Outliers</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>Outliers Threshold</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>Remove Multicollinearity</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>Multicollinearity Threshold</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>Remove Perfect Collinearity</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>Clustering</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>Clustering Iteration</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>Polynomial Features</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>Polynomial Degree</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>Trignometry Features</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>Polynomial Threshold</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>Group Features</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>Feature Selection</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>Feature Selection Method</td>\n","      <td>classic</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>Features Selection Threshold</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>Feature Interaction</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>54</th>\n","      <td>Feature Ratio</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>55</th>\n","      <td>Interaction Threshold</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>56</th>\n","      <td>Transform Target</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>57</th>\n","      <td>Transform Target Method</td>\n","      <td>box-cox</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-42d00438-3d3d-434a-a8a6-52f66bc301bf')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-42d00438-3d3d-434a-a8a6-52f66bc301bf button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-42d00438-3d3d-434a-a8a6-52f66bc301bf');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["INFO:logs:create_model_container: 0\n","INFO:logs:master_model_container: 0\n","INFO:logs:display_container: 1\n","INFO:logs:Pipeline(memory=None,\n","         steps=[('dtypes',\n","                 DataTypes_Auto_infer(categorical_features=[],\n","                                      display_types=True, features_todrop=[],\n","                                      id_columns=[], ml_usecase='regression',\n","                                      numerical_features=[], target='중식계',\n","                                      time_features=[])),\n","                ('imputer',\n","                 Simple_Imputer(categorical_strategy='not_available',\n","                                fill_value_categorical=None,\n","                                fill_value_numerical=None,\n","                                numeric_strategy='me...\n","                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),\n","                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),\n","                ('cluster_all', 'passthrough'),\n","                ('dummy', Dummify(target='중식계')),\n","                ('fix_perfect', Remove_100(target='중식계')),\n","                ('clean_names', Clean_Colum_Names()),\n","                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),\n","                ('dfs', 'passthrough'), ('pca', 'passthrough')],\n","         verbose=False)\n","INFO:logs:setup() succesfully completed......................................\n"]}]},{"cell_type":"code","source":["lunch_top_3 = compare_models(sort='MAE', n_select=3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["098a796cfd6048b696984c2f8c8760c2","a6cc6d89fb504dc8a8ef466a2382fbb9","34a07b8add3f4f53a30467a6324f1d0b"]},"id":"esfgicdgrwbW","executionInfo":{"status":"ok","timestamp":1660053372450,"user_tz":-540,"elapsed":30775,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"e76c1df8-0bb5-4046-a27c-1fcfb12e2bbd"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["                                    Model       MAE          MSE      RMSE  \\\n","gbr           Gradient Boosting Regressor   89.5796   13615.0490  116.3621   \n","rf                Random Forest Regressor   92.2471   15207.6905  122.8969   \n","lightgbm  Light Gradient Boosting Machine   94.6154   15322.6903  123.3732   \n","ada                    AdaBoost Regressor   99.5374   16376.7124  127.4198   \n","lasso                    Lasso Regression  101.3739   17506.4091  131.4485   \n","et                  Extra Trees Regressor  101.4397   17742.0241  132.6887   \n","lr                      Linear Regression  101.8447   17372.6934  131.0376   \n","br                         Bayesian Ridge  102.0415   17729.0416  132.1921   \n","ridge                    Ridge Regression  102.2137   17848.7572  132.6054   \n","omp           Orthogonal Matching Pursuit  108.2552   20704.2207  143.0396   \n","huber                     Huber Regressor  111.3332   21061.5192  144.6063   \n","llar         Lasso Least Angle Regression  112.4978   21339.1090  144.9956   \n","lar                Least Angle Regression  118.1090  180668.2562  259.1637   \n","dt                Decision Tree Regressor  119.0893   26158.4677  160.2449   \n","en                            Elastic Net  143.9831   31492.4279  176.9591   \n","knn                 K Neighbors Regressor  163.1004   41667.6402  203.7572   \n","dummy                     Dummy Regressor  172.4475   45991.0152  213.7559   \n","par          Passive Aggressive Regressor  258.1383   99209.9055  301.1920   \n","\n","              R2   RMSLE    MAPE  TT (Sec)  \n","gbr       0.6937  0.1443  0.1100     0.119  \n","rf        0.6574  0.1531  0.1137     0.724  \n","lightgbm  0.6553  0.1535  0.1168     0.057  \n","ada       0.6307  0.1583  0.1250     0.112  \n","lasso     0.6119  0.1639  0.1277     0.017  \n","et        0.6001  0.1642  0.1246     0.731  \n","lr        0.6152  0.1639  0.1275     0.014  \n","br        0.6086  0.1658  0.1287     0.019  \n","ridge     0.6061  0.1663  0.1291     0.015  \n","omp       0.5392  0.1773  0.1368     0.014  \n","huber     0.5289  0.1788  0.1387     0.058  \n","llar      0.5292  0.1803  0.1431     0.019  \n","lar      -3.8077  0.1797  0.1407     0.022  \n","dt        0.4183  0.2001  0.1452     0.034  \n","en        0.2962  0.2112  0.1782     0.016  \n","knn       0.0642  0.2390  0.1993     0.068  \n","dummy    -0.0236  0.2541  0.2155     0.012  \n","par      -1.3918  0.3283  0.3264     0.019  "],"text/html":["\n","  <div id=\"df-ac190c69-3fe3-4282-ae2f-7889491acedf\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>MAE</th>\n","      <th>MSE</th>\n","      <th>RMSE</th>\n","      <th>R2</th>\n","      <th>RMSLE</th>\n","      <th>MAPE</th>\n","      <th>TT (Sec)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>gbr</th>\n","      <td>Gradient Boosting Regressor</td>\n","      <td>89.5796</td>\n","      <td>13615.0490</td>\n","      <td>116.3621</td>\n","      <td>0.6937</td>\n","      <td>0.1443</td>\n","      <td>0.1100</td>\n","      <td>0.119</td>\n","    </tr>\n","    <tr>\n","      <th>rf</th>\n","      <td>Random Forest Regressor</td>\n","      <td>92.2471</td>\n","      <td>15207.6905</td>\n","      <td>122.8969</td>\n","      <td>0.6574</td>\n","      <td>0.1531</td>\n","      <td>0.1137</td>\n","      <td>0.724</td>\n","    </tr>\n","    <tr>\n","      <th>lightgbm</th>\n","      <td>Light Gradient Boosting Machine</td>\n","      <td>94.6154</td>\n","      <td>15322.6903</td>\n","      <td>123.3732</td>\n","      <td>0.6553</td>\n","      <td>0.1535</td>\n","      <td>0.1168</td>\n","      <td>0.057</td>\n","    </tr>\n","    <tr>\n","      <th>ada</th>\n","      <td>AdaBoost Regressor</td>\n","      <td>99.5374</td>\n","      <td>16376.7124</td>\n","      <td>127.4198</td>\n","      <td>0.6307</td>\n","      <td>0.1583</td>\n","      <td>0.1250</td>\n","      <td>0.112</td>\n","    </tr>\n","    <tr>\n","      <th>lasso</th>\n","      <td>Lasso Regression</td>\n","      <td>101.3739</td>\n","      <td>17506.4091</td>\n","      <td>131.4485</td>\n","      <td>0.6119</td>\n","      <td>0.1639</td>\n","      <td>0.1277</td>\n","      <td>0.017</td>\n","    </tr>\n","    <tr>\n","      <th>et</th>\n","      <td>Extra Trees Regressor</td>\n","      <td>101.4397</td>\n","      <td>17742.0241</td>\n","      <td>132.6887</td>\n","      <td>0.6001</td>\n","      <td>0.1642</td>\n","      <td>0.1246</td>\n","      <td>0.731</td>\n","    </tr>\n","    <tr>\n","      <th>lr</th>\n","      <td>Linear Regression</td>\n","      <td>101.8447</td>\n","      <td>17372.6934</td>\n","      <td>131.0376</td>\n","      <td>0.6152</td>\n","      <td>0.1639</td>\n","      <td>0.1275</td>\n","      <td>0.014</td>\n","    </tr>\n","    <tr>\n","      <th>br</th>\n","      <td>Bayesian Ridge</td>\n","      <td>102.0415</td>\n","      <td>17729.0416</td>\n","      <td>132.1921</td>\n","      <td>0.6086</td>\n","      <td>0.1658</td>\n","      <td>0.1287</td>\n","      <td>0.019</td>\n","    </tr>\n","    <tr>\n","      <th>ridge</th>\n","      <td>Ridge Regression</td>\n","      <td>102.2137</td>\n","      <td>17848.7572</td>\n","      <td>132.6054</td>\n","      <td>0.6061</td>\n","      <td>0.1663</td>\n","      <td>0.1291</td>\n","      <td>0.015</td>\n","    </tr>\n","    <tr>\n","      <th>omp</th>\n","      <td>Orthogonal Matching Pursuit</td>\n","      <td>108.2552</td>\n","      <td>20704.2207</td>\n","      <td>143.0396</td>\n","      <td>0.5392</td>\n","      <td>0.1773</td>\n","      <td>0.1368</td>\n","      <td>0.014</td>\n","    </tr>\n","    <tr>\n","      <th>huber</th>\n","      <td>Huber Regressor</td>\n","      <td>111.3332</td>\n","      <td>21061.5192</td>\n","      <td>144.6063</td>\n","      <td>0.5289</td>\n","      <td>0.1788</td>\n","      <td>0.1387</td>\n","      <td>0.058</td>\n","    </tr>\n","    <tr>\n","      <th>llar</th>\n","      <td>Lasso Least Angle Regression</td>\n","      <td>112.4978</td>\n","      <td>21339.1090</td>\n","      <td>144.9956</td>\n","      <td>0.5292</td>\n","      <td>0.1803</td>\n","      <td>0.1431</td>\n","      <td>0.019</td>\n","    </tr>\n","    <tr>\n","      <th>lar</th>\n","      <td>Least Angle Regression</td>\n","      <td>118.1090</td>\n","      <td>180668.2562</td>\n","      <td>259.1637</td>\n","      <td>-3.8077</td>\n","      <td>0.1797</td>\n","      <td>0.1407</td>\n","      <td>0.022</td>\n","    </tr>\n","    <tr>\n","      <th>dt</th>\n","      <td>Decision Tree Regressor</td>\n","      <td>119.0893</td>\n","      <td>26158.4677</td>\n","      <td>160.2449</td>\n","      <td>0.4183</td>\n","      <td>0.2001</td>\n","      <td>0.1452</td>\n","      <td>0.034</td>\n","    </tr>\n","    <tr>\n","      <th>en</th>\n","      <td>Elastic Net</td>\n","      <td>143.9831</td>\n","      <td>31492.4279</td>\n","      <td>176.9591</td>\n","      <td>0.2962</td>\n","      <td>0.2112</td>\n","      <td>0.1782</td>\n","      <td>0.016</td>\n","    </tr>\n","    <tr>\n","      <th>knn</th>\n","      <td>K Neighbors Regressor</td>\n","      <td>163.1004</td>\n","      <td>41667.6402</td>\n","      <td>203.7572</td>\n","      <td>0.0642</td>\n","      <td>0.2390</td>\n","      <td>0.1993</td>\n","      <td>0.068</td>\n","    </tr>\n","    <tr>\n","      <th>dummy</th>\n","      <td>Dummy Regressor</td>\n","      <td>172.4475</td>\n","      <td>45991.0152</td>\n","      <td>213.7559</td>\n","      <td>-0.0236</td>\n","      <td>0.2541</td>\n","      <td>0.2155</td>\n","      <td>0.012</td>\n","    </tr>\n","    <tr>\n","      <th>par</th>\n","      <td>Passive Aggressive Regressor</td>\n","      <td>258.1383</td>\n","      <td>99209.9055</td>\n","      <td>301.1920</td>\n","      <td>-1.3918</td>\n","      <td>0.3283</td>\n","      <td>0.3264</td>\n","      <td>0.019</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ac190c69-3fe3-4282-ae2f-7889491acedf')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ac190c69-3fe3-4282-ae2f-7889491acedf button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ac190c69-3fe3-4282-ae2f-7889491acedf');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["INFO:logs:create_model_container: 18\n","INFO:logs:master_model_container: 18\n","INFO:logs:display_container: 2\n","INFO:logs:[GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',\n","                          init=None, learning_rate=0.1, loss='ls', max_depth=3,\n","                          max_features=None, max_leaf_nodes=None,\n","                          min_impurity_decrease=0.0, min_impurity_split=None,\n","                          min_samples_leaf=1, min_samples_split=2,\n","                          min_weight_fraction_leaf=0.0, n_estimators=100,\n","                          n_iter_no_change=None, presort='deprecated',\n","                          random_state=6088, subsample=1.0, tol=0.0001,\n","                          validation_fraction=0.1, verbose=0, warm_start=False), RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n","                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n","                      max_samples=None, min_impurity_decrease=0.0,\n","                      min_impurity_split=None, min_samples_leaf=1,\n","                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n","                      n_estimators=100, n_jobs=-1, oob_score=False,\n","                      random_state=6088, verbose=0, warm_start=False), LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,\n","              importance_type='split', learning_rate=0.1, max_depth=-1,\n","              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,\n","              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,\n","              random_state=6088, reg_alpha=0.0, reg_lambda=0.0, silent='warn',\n","              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)]\n","INFO:logs:compare_models() succesfully completed......................................\n"]}]},{"cell_type":"code","source":["#앙상블\n","blend_lunch = blend_models(estimator_list= lunch_top_3, optimize='MAE')\n","pred_holdout = predict_model(blend_lunch)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["b6415767ab49488286e6de2f1303ece9","6be709210a95406bbb44803ef4fef051","efc55fbc6e834ff8ab4b6f1baa57c804"]},"id":"EcNKfwAor2T2","executionInfo":{"status":"ok","timestamp":1660053379966,"user_tz":-540,"elapsed":7687,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"e0dd9a9b-61b1-4ab8-cd31-9bf8d664bdd0"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["           MAE         MSE      RMSE      R2   RMSLE    MAPE\n","Fold                                                        \n","0      79.0186  11427.1787  106.8980  0.7095  0.1526  0.1118\n","1      85.4675  12883.3198  113.5047  0.6493  0.1268  0.0909\n","2      89.5989  14104.1511  118.7609  0.6758  0.1478  0.1111\n","3      91.3000  13780.2000  117.3891  0.6437  0.1358  0.1089\n","4     102.0986  18394.6935  135.6270  0.7155  0.2007  0.1505\n","5      83.2546  11049.1553  105.1150  0.7288  0.1251  0.0982\n","6      95.4915  13544.6408  116.3814  0.7407  0.1370  0.1131\n","7      90.1956  16471.8404  128.3427  0.5799  0.1589  0.1077\n","8      79.7556  11216.8790  105.9098  0.7476  0.1306  0.0972\n","9      92.9489  15430.2156  124.2184  0.6974  0.1426  0.1076\n","Mean   88.9130  13830.2274  117.2147  0.6888  0.1458  0.1097\n","Std     6.8329   2275.2309    9.5363  0.0496  0.0211  0.0153"],"text/html":["\n","  <div id=\"df-4c31b240-df8f-4982-be08-5c6ddf9a97c3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MAE</th>\n","      <th>MSE</th>\n","      <th>RMSE</th>\n","      <th>R2</th>\n","      <th>RMSLE</th>\n","      <th>MAPE</th>\n","    </tr>\n","    <tr>\n","      <th>Fold</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>79.0186</td>\n","      <td>11427.1787</td>\n","      <td>106.8980</td>\n","      <td>0.7095</td>\n","      <td>0.1526</td>\n","      <td>0.1118</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>85.4675</td>\n","      <td>12883.3198</td>\n","      <td>113.5047</td>\n","      <td>0.6493</td>\n","      <td>0.1268</td>\n","      <td>0.0909</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>89.5989</td>\n","      <td>14104.1511</td>\n","      <td>118.7609</td>\n","      <td>0.6758</td>\n","      <td>0.1478</td>\n","      <td>0.1111</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>91.3000</td>\n","      <td>13780.2000</td>\n","      <td>117.3891</td>\n","      <td>0.6437</td>\n","      <td>0.1358</td>\n","      <td>0.1089</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>102.0986</td>\n","      <td>18394.6935</td>\n","      <td>135.6270</td>\n","      <td>0.7155</td>\n","      <td>0.2007</td>\n","      <td>0.1505</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>83.2546</td>\n","      <td>11049.1553</td>\n","      <td>105.1150</td>\n","      <td>0.7288</td>\n","      <td>0.1251</td>\n","      <td>0.0982</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>95.4915</td>\n","      <td>13544.6408</td>\n","      <td>116.3814</td>\n","      <td>0.7407</td>\n","      <td>0.1370</td>\n","      <td>0.1131</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>90.1956</td>\n","      <td>16471.8404</td>\n","      <td>128.3427</td>\n","      <td>0.5799</td>\n","      <td>0.1589</td>\n","      <td>0.1077</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>79.7556</td>\n","      <td>11216.8790</td>\n","      <td>105.9098</td>\n","      <td>0.7476</td>\n","      <td>0.1306</td>\n","      <td>0.0972</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>92.9489</td>\n","      <td>15430.2156</td>\n","      <td>124.2184</td>\n","      <td>0.6974</td>\n","      <td>0.1426</td>\n","      <td>0.1076</td>\n","    </tr>\n","    <tr>\n","      <th>Mean</th>\n","      <td>88.9130</td>\n","      <td>13830.2274</td>\n","      <td>117.2147</td>\n","      <td>0.6888</td>\n","      <td>0.1458</td>\n","      <td>0.1097</td>\n","    </tr>\n","    <tr>\n","      <th>Std</th>\n","      <td>6.8329</td>\n","      <td>2275.2309</td>\n","      <td>9.5363</td>\n","      <td>0.0496</td>\n","      <td>0.0211</td>\n","      <td>0.0153</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4c31b240-df8f-4982-be08-5c6ddf9a97c3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4c31b240-df8f-4982-be08-5c6ddf9a97c3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4c31b240-df8f-4982-be08-5c6ddf9a97c3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["INFO:logs:create_model_container: 19\n","INFO:logs:master_model_container: 19\n","INFO:logs:display_container: 3\n","INFO:logs:VotingRegressor(estimators=[('gbr',\n","                             GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0,\n","                                                       criterion='friedman_mse',\n","                                                       init=None,\n","                                                       learning_rate=0.1,\n","                                                       loss='ls', max_depth=3,\n","                                                       max_features=None,\n","                                                       max_leaf_nodes=None,\n","                                                       min_impurity_decrease=0.0,\n","                                                       min_impurity_split=None,\n","                                                       min_samples_leaf=1,\n","                                                       min_samples_split=2,\n","                                                       min_weight_fraction_leaf=0.0,\n","                                                       n_estimators=100,\n","                                                       n_iter_no_change=...\n","                                           colsample_bytree=1.0,\n","                                           importance_type='split',\n","                                           learning_rate=0.1, max_depth=-1,\n","                                           min_child_samples=20,\n","                                           min_child_weight=0.001,\n","                                           min_split_gain=0.0, n_estimators=100,\n","                                           n_jobs=-1, num_leaves=31,\n","                                           objective=None, random_state=6088,\n","                                           reg_alpha=0.0, reg_lambda=0.0,\n","                                           silent='warn', subsample=1.0,\n","                                           subsample_for_bin=200000,\n","                                           subsample_freq=0))],\n","                n_jobs=-1, verbose=False, weights=None)\n","INFO:logs:blend_models() succesfully completed......................................\n","INFO:logs:Initializing predict_model()\n","INFO:logs:predict_model(estimator=VotingRegressor(estimators=[('gbr',\n","                             GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0,\n","                                                       criterion='friedman_mse',\n","                                                       init=None,\n","                                                       learning_rate=0.1,\n","                                                       loss='ls', max_depth=3,\n","                                                       max_features=None,\n","                                                       max_leaf_nodes=None,\n","                                                       min_impurity_decrease=0.0,\n","                                                       min_impurity_split=None,\n","                                                       min_samples_leaf=1,\n","                                                       min_samples_split=2,\n","                                                       min_weight_fraction_leaf=0.0,\n","                                                       n_estimators=100,\n","                                                       n_iter_no_change=...\n","                                           colsample_bytree=1.0,\n","                                           importance_type='split',\n","                                           learning_rate=0.1, max_depth=-1,\n","                                           min_child_samples=20,\n","                                           min_child_weight=0.001,\n","                                           min_split_gain=0.0, n_estimators=100,\n","                                           n_jobs=-1, num_leaves=31,\n","                                           objective=None, random_state=6088,\n","                                           reg_alpha=0.0, reg_lambda=0.0,\n","                                           silent='warn', subsample=1.0,\n","                                           subsample_for_bin=200000,\n","                                           subsample_freq=0))],\n","                n_jobs=-1, verbose=False, weights=None), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)\n","INFO:logs:Checking exceptions\n","INFO:logs:Preloading libraries\n","INFO:logs:Preparing display monitor\n"]},{"output_type":"display_data","data":{"text/plain":["              Model      MAE         MSE      RMSE      R2   RMSLE    MAPE\n","0  Voting Regressor  85.6239  12694.1761  112.6684  0.6756  0.1368  0.1022"],"text/html":["\n","  <div id=\"df-ff7bb11c-8a3c-4ece-b1c3-e7ee47c637c5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>MAE</th>\n","      <th>MSE</th>\n","      <th>RMSE</th>\n","      <th>R2</th>\n","      <th>RMSLE</th>\n","      <th>MAPE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Voting Regressor</td>\n","      <td>85.6239</td>\n","      <td>12694.1761</td>\n","      <td>112.6684</td>\n","      <td>0.6756</td>\n","      <td>0.1368</td>\n","      <td>0.1022</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ff7bb11c-8a3c-4ece-b1c3-e7ee47c637c5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ff7bb11c-8a3c-4ece-b1c3-e7ee47c637c5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ff7bb11c-8a3c-4ece-b1c3-e7ee47c637c5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}}]},{"cell_type":"code","source":["final_model = finalize_model(blend_lunch)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xoTOY1hcr75Y","executionInfo":{"status":"ok","timestamp":1660053390608,"user_tz":-540,"elapsed":10687,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"d11ff0c4-f300-4964-988e-1646b8fc73e0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["INFO:logs:Initializing finalize_model()\n","INFO:logs:finalize_model(estimator=VotingRegressor(estimators=[('gbr',\n","                             GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0,\n","                                                       criterion='friedman_mse',\n","                                                       init=None,\n","                                                       learning_rate=0.1,\n","                                                       loss='ls', max_depth=3,\n","                                                       max_features=None,\n","                                                       max_leaf_nodes=None,\n","                                                       min_impurity_decrease=0.0,\n","                                                       min_impurity_split=None,\n","                                                       min_samples_leaf=1,\n","                                                       min_samples_split=2,\n","                                                       min_weight_fraction_leaf=0.0,\n","                                                       n_estimators=100,\n","                                                       n_iter_no_change=...\n","                                           colsample_bytree=1.0,\n","                                           importance_type='split',\n","                                           learning_rate=0.1, max_depth=-1,\n","                                           min_child_samples=20,\n","                                           min_child_weight=0.001,\n","                                           min_split_gain=0.0, n_estimators=100,\n","                                           n_jobs=-1, num_leaves=31,\n","                                           objective=None, random_state=6088,\n","                                           reg_alpha=0.0, reg_lambda=0.0,\n","                                           silent='warn', subsample=1.0,\n","                                           subsample_for_bin=200000,\n","                                           subsample_freq=0))],\n","                n_jobs=-1, verbose=False, weights=None), fit_kwargs=None, groups=None, model_only=True, display=None, experiment_custom_tags=None, return_train_score=False)\n","INFO:logs:Finalizing VotingRegressor(estimators=[('gbr',\n","                             GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0,\n","                                                       criterion='friedman_mse',\n","                                                       init=None,\n","                                                       learning_rate=0.1,\n","                                                       loss='ls', max_depth=3,\n","                                                       max_features=None,\n","                                                       max_leaf_nodes=None,\n","                                                       min_impurity_decrease=0.0,\n","                                                       min_impurity_split=None,\n","                                                       min_samples_leaf=1,\n","                                                       min_samples_split=2,\n","                                                       min_weight_fraction_leaf=0.0,\n","                                                       n_estimators=100,\n","                                                       n_iter_no_change=...\n","                                           colsample_bytree=1.0,\n","                                           importance_type='split',\n","                                           learning_rate=0.1, max_depth=-1,\n","                                           min_child_samples=20,\n","                                           min_child_weight=0.001,\n","                                           min_split_gain=0.0, n_estimators=100,\n","                                           n_jobs=-1, num_leaves=31,\n","                                           objective=None, random_state=6088,\n","                                           reg_alpha=0.0, reg_lambda=0.0,\n","                                           silent='warn', subsample=1.0,\n","                                           subsample_for_bin=200000,\n","                                           subsample_freq=0))],\n","                n_jobs=-1, verbose=False, weights=None)\n","INFO:logs:Initializing create_model()\n","INFO:logs:create_model(estimator=VotingRegressor(estimators=[('gbr',\n","                             GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0,\n","                                                       criterion='friedman_mse',\n","                                                       init=None,\n","                                                       learning_rate=0.1,\n","                                                       loss='ls', max_depth=3,\n","                                                       max_features=None,\n","                                                       max_leaf_nodes=None,\n","                                                       min_impurity_decrease=0.0,\n","                                                       min_impurity_split=None,\n","                                                       min_samples_leaf=1,\n","                                                       min_samples_split=2,\n","                                                       min_weight_fraction_leaf=0.0,\n","                                                       n_estimators=100,\n","                                                       n_iter_no_change=...\n","                                           colsample_bytree=1.0,\n","                                           importance_type='split',\n","                                           learning_rate=0.1, max_depth=-1,\n","                                           min_child_samples=20,\n","                                           min_child_weight=0.001,\n","                                           min_split_gain=0.0, n_estimators=100,\n","                                           n_jobs=-1, num_leaves=31,\n","                                           objective=None, random_state=6088,\n","                                           reg_alpha=0.0, reg_lambda=0.0,\n","                                           silent='warn', subsample=1.0,\n","                                           subsample_for_bin=200000,\n","                                           subsample_freq=0))],\n","                n_jobs=-1, verbose=False, weights=None), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=False, probability_threshold=None, display=None, return_train_score=False, kwargs={})\n","INFO:logs:Checking exceptions\n","INFO:logs:Importing libraries\n","INFO:logs:Copying training dataset\n","INFO:logs:Defining folds\n","INFO:logs:Declaring metric variables\n","INFO:logs:Importing untrained model\n","INFO:logs:Declaring custom model\n","INFO:logs:Voting Regressor Imported succesfully\n","INFO:logs:Starting cross validation\n","INFO:logs:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1\n","INFO:logs:Calculating mean and std\n","INFO:logs:Creating metrics dataframe\n","INFO:logs:Finalizing model\n","INFO:logs:create_model_container: 19\n","INFO:logs:master_model_container: 19\n","INFO:logs:display_container: 5\n","INFO:logs:VotingRegressor(estimators=[('gbr',\n","                             GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0,\n","                                                       criterion='friedman_mse',\n","                                                       init=None,\n","                                                       learning_rate=0.1,\n","                                                       loss='ls', max_depth=3,\n","                                                       max_features=None,\n","                                                       max_leaf_nodes=None,\n","                                                       min_impurity_decrease=0.0,\n","                                                       min_impurity_split=None,\n","                                                       min_samples_leaf=1,\n","                                                       min_samples_split=2,\n","                                                       min_weight_fraction_leaf=0.0,\n","                                                       n_estimators=100,\n","                                                       n_iter_no_change=...\n","                                           colsample_bytree=1.0,\n","                                           importance_type='split',\n","                                           learning_rate=0.1, max_depth=-1,\n","                                           min_child_samples=20,\n","                                           min_child_weight=0.001,\n","                                           min_split_gain=0.0, n_estimators=100,\n","                                           n_jobs=-1, num_leaves=31,\n","                                           objective=None, random_state=6088,\n","                                           reg_alpha=0.0, reg_lambda=0.0,\n","                                           silent='warn', subsample=1.0,\n","                                           subsample_for_bin=200000,\n","                                           subsample_freq=0))],\n","                n_jobs=-1, verbose=False, weights=None)\n","INFO:logs:create_model() succesfully completed......................................\n","INFO:logs:create_model_container: 19\n","INFO:logs:master_model_container: 19\n","INFO:logs:display_container: 4\n","INFO:logs:VotingRegressor(estimators=[('gbr',\n","                             GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0,\n","                                                       criterion='friedman_mse',\n","                                                       init=None,\n","                                                       learning_rate=0.1,\n","                                                       loss='ls', max_depth=3,\n","                                                       max_features=None,\n","                                                       max_leaf_nodes=None,\n","                                                       min_impurity_decrease=0.0,\n","                                                       min_impurity_split=None,\n","                                                       min_samples_leaf=1,\n","                                                       min_samples_split=2,\n","                                                       min_weight_fraction_leaf=0.0,\n","                                                       n_estimators=100,\n","                                                       n_iter_no_change=...\n","                                           colsample_bytree=1.0,\n","                                           importance_type='split',\n","                                           learning_rate=0.1, max_depth=-1,\n","                                           min_child_samples=20,\n","                                           min_child_weight=0.001,\n","                                           min_split_gain=0.0, n_estimators=100,\n","                                           n_jobs=-1, num_leaves=31,\n","                                           objective=None, random_state=6088,\n","                                           reg_alpha=0.0, reg_lambda=0.0,\n","                                           silent='warn', subsample=1.0,\n","                                           subsample_for_bin=200000,\n","                                           subsample_freq=0))],\n","                n_jobs=-1, verbose=False, weights=None)\n","INFO:logs:finalize_model() succesfully completed......................................\n"]}]},{"cell_type":"code","source":["predictions = predict_model(final_model, data = ln_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hzpt-YPVsAO0","executionInfo":{"status":"ok","timestamp":1660053390977,"user_tz":-540,"elapsed":462,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"ca0d93e9-fbbc-458e-8014-28d508f1e45f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["INFO:logs:Initializing predict_model()\n","INFO:logs:predict_model(estimator=VotingRegressor(estimators=[('gbr',\n","                             GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0,\n","                                                       criterion='friedman_mse',\n","                                                       init=None,\n","                                                       learning_rate=0.1,\n","                                                       loss='ls', max_depth=3,\n","                                                       max_features=None,\n","                                                       max_leaf_nodes=None,\n","                                                       min_impurity_decrease=0.0,\n","                                                       min_impurity_split=None,\n","                                                       min_samples_leaf=1,\n","                                                       min_samples_split=2,\n","                                                       min_weight_fraction_leaf=0.0,\n","                                                       n_estimators=100,\n","                                                       n_iter_no_change=...\n","                                           colsample_bytree=1.0,\n","                                           importance_type='split',\n","                                           learning_rate=0.1, max_depth=-1,\n","                                           min_child_samples=20,\n","                                           min_child_weight=0.001,\n","                                           min_split_gain=0.0, n_estimators=100,\n","                                           n_jobs=-1, num_leaves=31,\n","                                           objective=None, random_state=6088,\n","                                           reg_alpha=0.0, reg_lambda=0.0,\n","                                           silent='warn', subsample=1.0,\n","                                           subsample_for_bin=200000,\n","                                           subsample_freq=0))],\n","                n_jobs=-1, verbose=False, weights=None), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)\n","INFO:logs:Checking exceptions\n","INFO:logs:Preloading libraries\n","INFO:logs:Preparing display monitor\n"]}]},{"cell_type":"code","source":["submission['중식계'] = predictions['Label']"],"metadata":{"id":"YSaU5oEZV0dc"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 석식계 Pycaret"],"metadata":{"id":"QLmwo7VFsQtE"}},{"cell_type":"code","source":["r_dn = setup(data=dn_train, target='석식계', session_id=2441)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["0a37df5b79544025a7c527a203eafafb","cebd80cbfaad4ec498aeecfbc138c48d","02fc008a45fe41a28ba21ddfba865a81","8cd42206c8a444c28a0551e76d25b70b","446384ec993b4288b295ac2cebbb1238","cea4e332aed341b1a11f4017c31d111f"]},"id":"rlkIgsbNsTyE","executionInfo":{"status":"ok","timestamp":1660053431284,"user_tz":-540,"elapsed":10793,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"aa7fde98-dc8a-44cc-aaee-ed8b41ff6acf"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["                               Description             Value\n","0                               session_id              2441\n","1                                   Target               석식계\n","2                            Original Data         (1204, 6)\n","3                           Missing Values             False\n","4                         Numeric Features                 3\n","5                     Categorical Features                 2\n","6                         Ordinal Features             False\n","7                High Cardinality Features             False\n","8                  High Cardinality Method              None\n","9                    Transformed Train Set         (842, 27)\n","10                    Transformed Test Set         (362, 27)\n","11                      Shuffle Train-Test              True\n","12                     Stratify Train-Test             False\n","13                          Fold Generator             KFold\n","14                             Fold Number                10\n","15                                CPU Jobs                -1\n","16                                 Use GPU             False\n","17                          Log Experiment             False\n","18                         Experiment Name  reg-default-name\n","19                                     USI              bddd\n","20                         Imputation Type            simple\n","21          Iterative Imputation Iteration              None\n","22                         Numeric Imputer              mean\n","23      Iterative Imputation Numeric Model              None\n","24                     Categorical Imputer          constant\n","25  Iterative Imputation Categorical Model              None\n","26           Unknown Categoricals Handling    least_frequent\n","27                               Normalize             False\n","28                        Normalize Method              None\n","29                          Transformation             False\n","30                   Transformation Method              None\n","31                                     PCA             False\n","32                              PCA Method              None\n","33                          PCA Components              None\n","34                     Ignore Low Variance             False\n","35                     Combine Rare Levels             False\n","36                    Rare Level Threshold              None\n","37                         Numeric Binning             False\n","38                         Remove Outliers             False\n","39                      Outliers Threshold              None\n","40                Remove Multicollinearity             False\n","41             Multicollinearity Threshold              None\n","42             Remove Perfect Collinearity              True\n","43                              Clustering             False\n","44                    Clustering Iteration              None\n","45                     Polynomial Features             False\n","46                       Polynomial Degree              None\n","47                    Trignometry Features             False\n","48                    Polynomial Threshold              None\n","49                          Group Features             False\n","50                       Feature Selection             False\n","51                Feature Selection Method           classic\n","52            Features Selection Threshold              None\n","53                     Feature Interaction             False\n","54                           Feature Ratio             False\n","55                   Interaction Threshold              None\n","56                        Transform Target             False\n","57                 Transform Target Method           box-cox"],"text/html":["\n","  <div id=\"df-b59d0b47-70b8-473a-b7ee-1c4afe24c6b8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Description</th>\n","      <th>Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>session_id</td>\n","      <td>2441</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Target</td>\n","      <td>석식계</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Original Data</td>\n","      <td>(1204, 6)</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Missing Values</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Numeric Features</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Categorical Features</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Ordinal Features</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>High Cardinality Features</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>High Cardinality Method</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Transformed Train Set</td>\n","      <td>(842, 27)</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Transformed Test Set</td>\n","      <td>(362, 27)</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Shuffle Train-Test</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Stratify Train-Test</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Fold Generator</td>\n","      <td>KFold</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Fold Number</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>CPU Jobs</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Use GPU</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Log Experiment</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Experiment Name</td>\n","      <td>reg-default-name</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>USI</td>\n","      <td>bddd</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>Imputation Type</td>\n","      <td>simple</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>Iterative Imputation Iteration</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>Numeric Imputer</td>\n","      <td>mean</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Iterative Imputation Numeric Model</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>Categorical Imputer</td>\n","      <td>constant</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>Iterative Imputation Categorical Model</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Unknown Categoricals Handling</td>\n","      <td>least_frequent</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>Normalize</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>Normalize Method</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>Transformation</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>Transformation Method</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>PCA</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>PCA Method</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>PCA Components</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>Ignore Low Variance</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>Combine Rare Levels</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>Rare Level Threshold</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>Numeric Binning</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>Remove Outliers</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>Outliers Threshold</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>Remove Multicollinearity</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>Multicollinearity Threshold</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>Remove Perfect Collinearity</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>Clustering</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>Clustering Iteration</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>Polynomial Features</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>Polynomial Degree</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>Trignometry Features</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>Polynomial Threshold</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>Group Features</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>Feature Selection</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>Feature Selection Method</td>\n","      <td>classic</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>Features Selection Threshold</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>Feature Interaction</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>54</th>\n","      <td>Feature Ratio</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>55</th>\n","      <td>Interaction Threshold</td>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>56</th>\n","      <td>Transform Target</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>57</th>\n","      <td>Transform Target Method</td>\n","      <td>box-cox</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b59d0b47-70b8-473a-b7ee-1c4afe24c6b8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b59d0b47-70b8-473a-b7ee-1c4afe24c6b8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b59d0b47-70b8-473a-b7ee-1c4afe24c6b8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["INFO:logs:create_model_container: 0\n","INFO:logs:master_model_container: 0\n","INFO:logs:display_container: 1\n","INFO:logs:Pipeline(memory=None,\n","         steps=[('dtypes',\n","                 DataTypes_Auto_infer(categorical_features=[],\n","                                      display_types=True, features_todrop=[],\n","                                      id_columns=[], ml_usecase='regression',\n","                                      numerical_features=[], target='석식계',\n","                                      time_features=[])),\n","                ('imputer',\n","                 Simple_Imputer(categorical_strategy='not_available',\n","                                fill_value_categorical=None,\n","                                fill_value_numerical=None,\n","                                numeric_strategy='me...\n","                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),\n","                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),\n","                ('cluster_all', 'passthrough'),\n","                ('dummy', Dummify(target='석식계')),\n","                ('fix_perfect', Remove_100(target='석식계')),\n","                ('clean_names', Clean_Colum_Names()),\n","                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),\n","                ('dfs', 'passthrough'), ('pca', 'passthrough')],\n","         verbose=False)\n","INFO:logs:setup() succesfully completed......................................\n"]}]},{"cell_type":"code","source":["dinner_top_3 = compare_models(sort='MAE', n_select=3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["80b8ac1a72e74b7e9c29922382b29c64","c5032db5b26241bd8ca5e8460bcec7a3","91c7b4075dc141f9a3d721d64c8df060"]},"id":"JvFNwAvZsarD","executionInfo":{"status":"ok","timestamp":1660053462522,"user_tz":-540,"elapsed":28066,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"80f94a8a-0774-4273-c3de-2ad5367d5dc6"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["                                    Model       MAE         MSE      RMSE  \\\n","rf                Random Forest Regressor   59.0581   6574.4767   80.7484   \n","gbr           Gradient Boosting Regressor   59.3628   6406.1013   79.5943   \n","lightgbm  Light Gradient Boosting Machine   61.2642   6720.0501   81.5989   \n","et                  Extra Trees Regressor   63.3519   7381.8177   85.4391   \n","br                         Bayesian Ridge   71.7507   8770.3905   92.9868   \n","lr                      Linear Regression   71.9961   8734.7894   92.8018   \n","lar                Least Angle Regression   72.0208   8738.8754   92.8232   \n","omp           Orthogonal Matching Pursuit   72.2286   8978.1370   94.0856   \n","ridge                    Ridge Regression   72.4313   9167.8295   95.1041   \n","lasso                    Lasso Regression   72.4793   9038.6819   94.4361   \n","ada                    AdaBoost Regressor   72.6011   8840.7452   93.7470   \n","llar         Lasso Least Angle Regression   77.1381  10337.4673  100.9991   \n","huber                     Huber Regressor   82.9374  12052.7556  109.3794   \n","dt                Decision Tree Regressor   83.8778  12377.3567  110.4105   \n","en                            Elastic Net   92.9516  16865.2298  128.5895   \n","dummy                     Dummy Regressor  102.7472  20111.4153  140.5352   \n","par          Passive Aggressive Regressor  106.6861  21280.6881  144.3419   \n","knn                 K Neighbors Regressor  106.9595  21765.5786  146.0175   \n","\n","              R2   RMSLE    MAPE  TT (Sec)  \n","rf        0.6376  0.4967  0.1465     0.606  \n","gbr       0.6526  0.6222  0.1473     0.103  \n","lightgbm  0.6319  0.6172  0.1487     0.059  \n","et        0.5870  0.4460  0.1527     0.537  \n","br        0.5313  0.8124  0.1793     0.015  \n","lr        0.5330  0.8069  0.1788     0.015  \n","lar       0.5329  0.8063  0.1789     0.048  \n","omp       0.5162  0.8012  0.1829     0.013  \n","ridge     0.5097  0.8273  0.1831     0.014  \n","lasso     0.5156  0.8443  0.1814     0.019  \n","ada       0.5199  0.8641  0.1690     0.109  \n","llar      0.4572  0.9417  0.1839     0.021  \n","huber     0.3464  0.8714  0.2042     0.051  \n","dt        0.3250  0.4984  0.1981     0.021  \n","en        0.1370  1.0443  0.2041     0.017  \n","dummy    -0.0304  1.0673  0.2258     0.012  \n","par      -0.0928  1.0698  0.2248     0.018  \n","knn      -0.1211  1.0661  0.2295     0.063  "],"text/html":["\n","  <div id=\"df-4f181dcd-0961-4a2b-91c6-739fb5738295\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>MAE</th>\n","      <th>MSE</th>\n","      <th>RMSE</th>\n","      <th>R2</th>\n","      <th>RMSLE</th>\n","      <th>MAPE</th>\n","      <th>TT (Sec)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>rf</th>\n","      <td>Random Forest Regressor</td>\n","      <td>59.0581</td>\n","      <td>6574.4767</td>\n","      <td>80.7484</td>\n","      <td>0.6376</td>\n","      <td>0.4967</td>\n","      <td>0.1465</td>\n","      <td>0.606</td>\n","    </tr>\n","    <tr>\n","      <th>gbr</th>\n","      <td>Gradient Boosting Regressor</td>\n","      <td>59.3628</td>\n","      <td>6406.1013</td>\n","      <td>79.5943</td>\n","      <td>0.6526</td>\n","      <td>0.6222</td>\n","      <td>0.1473</td>\n","      <td>0.103</td>\n","    </tr>\n","    <tr>\n","      <th>lightgbm</th>\n","      <td>Light Gradient Boosting Machine</td>\n","      <td>61.2642</td>\n","      <td>6720.0501</td>\n","      <td>81.5989</td>\n","      <td>0.6319</td>\n","      <td>0.6172</td>\n","      <td>0.1487</td>\n","      <td>0.059</td>\n","    </tr>\n","    <tr>\n","      <th>et</th>\n","      <td>Extra Trees Regressor</td>\n","      <td>63.3519</td>\n","      <td>7381.8177</td>\n","      <td>85.4391</td>\n","      <td>0.5870</td>\n","      <td>0.4460</td>\n","      <td>0.1527</td>\n","      <td>0.537</td>\n","    </tr>\n","    <tr>\n","      <th>br</th>\n","      <td>Bayesian Ridge</td>\n","      <td>71.7507</td>\n","      <td>8770.3905</td>\n","      <td>92.9868</td>\n","      <td>0.5313</td>\n","      <td>0.8124</td>\n","      <td>0.1793</td>\n","      <td>0.015</td>\n","    </tr>\n","    <tr>\n","      <th>lr</th>\n","      <td>Linear Regression</td>\n","      <td>71.9961</td>\n","      <td>8734.7894</td>\n","      <td>92.8018</td>\n","      <td>0.5330</td>\n","      <td>0.8069</td>\n","      <td>0.1788</td>\n","      <td>0.015</td>\n","    </tr>\n","    <tr>\n","      <th>lar</th>\n","      <td>Least Angle Regression</td>\n","      <td>72.0208</td>\n","      <td>8738.8754</td>\n","      <td>92.8232</td>\n","      <td>0.5329</td>\n","      <td>0.8063</td>\n","      <td>0.1789</td>\n","      <td>0.048</td>\n","    </tr>\n","    <tr>\n","      <th>omp</th>\n","      <td>Orthogonal Matching Pursuit</td>\n","      <td>72.2286</td>\n","      <td>8978.1370</td>\n","      <td>94.0856</td>\n","      <td>0.5162</td>\n","      <td>0.8012</td>\n","      <td>0.1829</td>\n","      <td>0.013</td>\n","    </tr>\n","    <tr>\n","      <th>ridge</th>\n","      <td>Ridge Regression</td>\n","      <td>72.4313</td>\n","      <td>9167.8295</td>\n","      <td>95.1041</td>\n","      <td>0.5097</td>\n","      <td>0.8273</td>\n","      <td>0.1831</td>\n","      <td>0.014</td>\n","    </tr>\n","    <tr>\n","      <th>lasso</th>\n","      <td>Lasso Regression</td>\n","      <td>72.4793</td>\n","      <td>9038.6819</td>\n","      <td>94.4361</td>\n","      <td>0.5156</td>\n","      <td>0.8443</td>\n","      <td>0.1814</td>\n","      <td>0.019</td>\n","    </tr>\n","    <tr>\n","      <th>ada</th>\n","      <td>AdaBoost Regressor</td>\n","      <td>72.6011</td>\n","      <td>8840.7452</td>\n","      <td>93.7470</td>\n","      <td>0.5199</td>\n","      <td>0.8641</td>\n","      <td>0.1690</td>\n","      <td>0.109</td>\n","    </tr>\n","    <tr>\n","      <th>llar</th>\n","      <td>Lasso Least Angle Regression</td>\n","      <td>77.1381</td>\n","      <td>10337.4673</td>\n","      <td>100.9991</td>\n","      <td>0.4572</td>\n","      <td>0.9417</td>\n","      <td>0.1839</td>\n","      <td>0.021</td>\n","    </tr>\n","    <tr>\n","      <th>huber</th>\n","      <td>Huber Regressor</td>\n","      <td>82.9374</td>\n","      <td>12052.7556</td>\n","      <td>109.3794</td>\n","      <td>0.3464</td>\n","      <td>0.8714</td>\n","      <td>0.2042</td>\n","      <td>0.051</td>\n","    </tr>\n","    <tr>\n","      <th>dt</th>\n","      <td>Decision Tree Regressor</td>\n","      <td>83.8778</td>\n","      <td>12377.3567</td>\n","      <td>110.4105</td>\n","      <td>0.3250</td>\n","      <td>0.4984</td>\n","      <td>0.1981</td>\n","      <td>0.021</td>\n","    </tr>\n","    <tr>\n","      <th>en</th>\n","      <td>Elastic Net</td>\n","      <td>92.9516</td>\n","      <td>16865.2298</td>\n","      <td>128.5895</td>\n","      <td>0.1370</td>\n","      <td>1.0443</td>\n","      <td>0.2041</td>\n","      <td>0.017</td>\n","    </tr>\n","    <tr>\n","      <th>dummy</th>\n","      <td>Dummy Regressor</td>\n","      <td>102.7472</td>\n","      <td>20111.4153</td>\n","      <td>140.5352</td>\n","      <td>-0.0304</td>\n","      <td>1.0673</td>\n","      <td>0.2258</td>\n","      <td>0.012</td>\n","    </tr>\n","    <tr>\n","      <th>par</th>\n","      <td>Passive Aggressive Regressor</td>\n","      <td>106.6861</td>\n","      <td>21280.6881</td>\n","      <td>144.3419</td>\n","      <td>-0.0928</td>\n","      <td>1.0698</td>\n","      <td>0.2248</td>\n","      <td>0.018</td>\n","    </tr>\n","    <tr>\n","      <th>knn</th>\n","      <td>K Neighbors Regressor</td>\n","      <td>106.9595</td>\n","      <td>21765.5786</td>\n","      <td>146.0175</td>\n","      <td>-0.1211</td>\n","      <td>1.0661</td>\n","      <td>0.2295</td>\n","      <td>0.063</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4f181dcd-0961-4a2b-91c6-739fb5738295')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4f181dcd-0961-4a2b-91c6-739fb5738295 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4f181dcd-0961-4a2b-91c6-739fb5738295');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["INFO:logs:create_model_container: 18\n","INFO:logs:master_model_container: 18\n","INFO:logs:display_container: 2\n","INFO:logs:[RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n","                      max_depth=None, max_features='auto', max_leaf_nodes=None,\n","                      max_samples=None, min_impurity_decrease=0.0,\n","                      min_impurity_split=None, min_samples_leaf=1,\n","                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n","                      n_estimators=100, n_jobs=-1, oob_score=False,\n","                      random_state=2441, verbose=0, warm_start=False), GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',\n","                          init=None, learning_rate=0.1, loss='ls', max_depth=3,\n","                          max_features=None, max_leaf_nodes=None,\n","                          min_impurity_decrease=0.0, min_impurity_split=None,\n","                          min_samples_leaf=1, min_samples_split=2,\n","                          min_weight_fraction_leaf=0.0, n_estimators=100,\n","                          n_iter_no_change=None, presort='deprecated',\n","                          random_state=2441, subsample=1.0, tol=0.0001,\n","                          validation_fraction=0.1, verbose=0, warm_start=False), LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,\n","              importance_type='split', learning_rate=0.1, max_depth=-1,\n","              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,\n","              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,\n","              random_state=2441, reg_alpha=0.0, reg_lambda=0.0, silent='warn',\n","              subsample=1.0, subsample_for_bin=200000, subsample_freq=0)]\n","INFO:logs:compare_models() succesfully completed......................................\n"]}]},{"cell_type":"code","source":["#앙상블\n","blend_dinner = blend_models(estimator_list= dinner_top_3, optimize='MAE')\n","pred_holdout = predict_model(blend_dinner)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["5310c39baf6642afb36b47f3bf0b1a76","eca08a83f2db4892b7f70de47deeac58","7ac9a4bf8a48437486c949c374acadab"]},"id":"wOx72zJdsc3D","executionInfo":{"status":"ok","timestamp":1660053469516,"user_tz":-540,"elapsed":7081,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"518d2776-310f-4e00-c1a1-4561e31b1aa5"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["          MAE        MSE     RMSE      R2   RMSLE    MAPE\n","Fold                                                     \n","0     58.1793  5620.8337  74.9722  0.4146  0.1617  0.1218\n","1     54.5184  5605.7206  74.8714  0.6425  0.5186  0.1204\n","2     66.0979  8164.0336  90.3550  0.7178  0.9666  0.1761\n","3     55.8589  5622.2338  74.9816  0.5949  0.1990  0.1544\n","4     54.0094  4690.2992  68.4858  0.8111  0.7865  0.1290\n","5     64.8274  8512.6237  92.2639  0.6036  0.7790  0.1916\n","6     59.6590  7181.4542  84.7435  0.6101  0.2263  0.1301\n","7     59.4350  6460.7897  80.3790  0.7193  0.6930  0.1492\n","8     52.9229  5128.8588  71.6161  0.7063  0.7610  0.1218\n","9     58.3379  5505.1015  74.1964  0.7658  0.6624  0.1445\n","Mean  58.3846  6249.1949  78.6865  0.6586  0.5754  0.1439\n","Std    4.1722  1230.6323   7.5917  0.1065  0.2707  0.0232"],"text/html":["\n","  <div id=\"df-d937c238-1076-4f78-89fb-6421fc3d620a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MAE</th>\n","      <th>MSE</th>\n","      <th>RMSE</th>\n","      <th>R2</th>\n","      <th>RMSLE</th>\n","      <th>MAPE</th>\n","    </tr>\n","    <tr>\n","      <th>Fold</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>58.1793</td>\n","      <td>5620.8337</td>\n","      <td>74.9722</td>\n","      <td>0.4146</td>\n","      <td>0.1617</td>\n","      <td>0.1218</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>54.5184</td>\n","      <td>5605.7206</td>\n","      <td>74.8714</td>\n","      <td>0.6425</td>\n","      <td>0.5186</td>\n","      <td>0.1204</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>66.0979</td>\n","      <td>8164.0336</td>\n","      <td>90.3550</td>\n","      <td>0.7178</td>\n","      <td>0.9666</td>\n","      <td>0.1761</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>55.8589</td>\n","      <td>5622.2338</td>\n","      <td>74.9816</td>\n","      <td>0.5949</td>\n","      <td>0.1990</td>\n","      <td>0.1544</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>54.0094</td>\n","      <td>4690.2992</td>\n","      <td>68.4858</td>\n","      <td>0.8111</td>\n","      <td>0.7865</td>\n","      <td>0.1290</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>64.8274</td>\n","      <td>8512.6237</td>\n","      <td>92.2639</td>\n","      <td>0.6036</td>\n","      <td>0.7790</td>\n","      <td>0.1916</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>59.6590</td>\n","      <td>7181.4542</td>\n","      <td>84.7435</td>\n","      <td>0.6101</td>\n","      <td>0.2263</td>\n","      <td>0.1301</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>59.4350</td>\n","      <td>6460.7897</td>\n","      <td>80.3790</td>\n","      <td>0.7193</td>\n","      <td>0.6930</td>\n","      <td>0.1492</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>52.9229</td>\n","      <td>5128.8588</td>\n","      <td>71.6161</td>\n","      <td>0.7063</td>\n","      <td>0.7610</td>\n","      <td>0.1218</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>58.3379</td>\n","      <td>5505.1015</td>\n","      <td>74.1964</td>\n","      <td>0.7658</td>\n","      <td>0.6624</td>\n","      <td>0.1445</td>\n","    </tr>\n","    <tr>\n","      <th>Mean</th>\n","      <td>58.3846</td>\n","      <td>6249.1949</td>\n","      <td>78.6865</td>\n","      <td>0.6586</td>\n","      <td>0.5754</td>\n","      <td>0.1439</td>\n","    </tr>\n","    <tr>\n","      <th>Std</th>\n","      <td>4.1722</td>\n","      <td>1230.6323</td>\n","      <td>7.5917</td>\n","      <td>0.1065</td>\n","      <td>0.2707</td>\n","      <td>0.0232</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d937c238-1076-4f78-89fb-6421fc3d620a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d937c238-1076-4f78-89fb-6421fc3d620a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d937c238-1076-4f78-89fb-6421fc3d620a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["INFO:logs:create_model_container: 19\n","INFO:logs:master_model_container: 19\n","INFO:logs:display_container: 3\n","INFO:logs:VotingRegressor(estimators=[('rf',\n","                             RandomForestRegressor(bootstrap=True,\n","                                                   ccp_alpha=0.0,\n","                                                   criterion='mse',\n","                                                   max_depth=None,\n","                                                   max_features='auto',\n","                                                   max_leaf_nodes=None,\n","                                                   max_samples=None,\n","                                                   min_impurity_decrease=0.0,\n","                                                   min_impurity_split=None,\n","                                                   min_samples_leaf=1,\n","                                                   min_samples_split=2,\n","                                                   min_weight_fraction_leaf=0.0,\n","                                                   n_estimators=100, n_jobs=-1,\n","                                                   oob_score=False,\n","                                                   random_state=244...\n","                                           colsample_bytree=1.0,\n","                                           importance_type='split',\n","                                           learning_rate=0.1, max_depth=-1,\n","                                           min_child_samples=20,\n","                                           min_child_weight=0.001,\n","                                           min_split_gain=0.0, n_estimators=100,\n","                                           n_jobs=-1, num_leaves=31,\n","                                           objective=None, random_state=2441,\n","                                           reg_alpha=0.0, reg_lambda=0.0,\n","                                           silent='warn', subsample=1.0,\n","                                           subsample_for_bin=200000,\n","                                           subsample_freq=0))],\n","                n_jobs=-1, verbose=False, weights=None)\n","INFO:logs:blend_models() succesfully completed......................................\n","INFO:logs:Initializing predict_model()\n","INFO:logs:predict_model(estimator=VotingRegressor(estimators=[('rf',\n","                             RandomForestRegressor(bootstrap=True,\n","                                                   ccp_alpha=0.0,\n","                                                   criterion='mse',\n","                                                   max_depth=None,\n","                                                   max_features='auto',\n","                                                   max_leaf_nodes=None,\n","                                                   max_samples=None,\n","                                                   min_impurity_decrease=0.0,\n","                                                   min_impurity_split=None,\n","                                                   min_samples_leaf=1,\n","                                                   min_samples_split=2,\n","                                                   min_weight_fraction_leaf=0.0,\n","                                                   n_estimators=100, n_jobs=-1,\n","                                                   oob_score=False,\n","                                                   random_state=244...\n","                                           colsample_bytree=1.0,\n","                                           importance_type='split',\n","                                           learning_rate=0.1, max_depth=-1,\n","                                           min_child_samples=20,\n","                                           min_child_weight=0.001,\n","                                           min_split_gain=0.0, n_estimators=100,\n","                                           n_jobs=-1, num_leaves=31,\n","                                           objective=None, random_state=2441,\n","                                           reg_alpha=0.0, reg_lambda=0.0,\n","                                           silent='warn', subsample=1.0,\n","                                           subsample_for_bin=200000,\n","                                           subsample_freq=0))],\n","                n_jobs=-1, verbose=False, weights=None), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)\n","INFO:logs:Checking exceptions\n","INFO:logs:Preloading libraries\n","INFO:logs:Preparing display monitor\n"]},{"output_type":"display_data","data":{"text/plain":["              Model     MAE        MSE    RMSE      R2  RMSLE    MAPE\n","0  Voting Regressor  59.715  7147.8503  84.545  0.6001  0.719  0.1363"],"text/html":["\n","  <div id=\"df-7fbf89dc-ed8c-4ba7-a959-3a22f1330904\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model</th>\n","      <th>MAE</th>\n","      <th>MSE</th>\n","      <th>RMSE</th>\n","      <th>R2</th>\n","      <th>RMSLE</th>\n","      <th>MAPE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Voting Regressor</td>\n","      <td>59.715</td>\n","      <td>7147.8503</td>\n","      <td>84.545</td>\n","      <td>0.6001</td>\n","      <td>0.719</td>\n","      <td>0.1363</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7fbf89dc-ed8c-4ba7-a959-3a22f1330904')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7fbf89dc-ed8c-4ba7-a959-3a22f1330904 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7fbf89dc-ed8c-4ba7-a959-3a22f1330904');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}}]},{"cell_type":"code","source":["final_model = finalize_model(blend_dinner)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SpNcyXxdsqxo","executionInfo":{"status":"ok","timestamp":1660053477248,"user_tz":-540,"elapsed":7806,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"be079020-0345-43c9-918d-f12961eda447"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["INFO:logs:Initializing finalize_model()\n","INFO:logs:finalize_model(estimator=VotingRegressor(estimators=[('rf',\n","                             RandomForestRegressor(bootstrap=True,\n","                                                   ccp_alpha=0.0,\n","                                                   criterion='mse',\n","                                                   max_depth=None,\n","                                                   max_features='auto',\n","                                                   max_leaf_nodes=None,\n","                                                   max_samples=None,\n","                                                   min_impurity_decrease=0.0,\n","                                                   min_impurity_split=None,\n","                                                   min_samples_leaf=1,\n","                                                   min_samples_split=2,\n","                                                   min_weight_fraction_leaf=0.0,\n","                                                   n_estimators=100, n_jobs=-1,\n","                                                   oob_score=False,\n","                                                   random_state=244...\n","                                           colsample_bytree=1.0,\n","                                           importance_type='split',\n","                                           learning_rate=0.1, max_depth=-1,\n","                                           min_child_samples=20,\n","                                           min_child_weight=0.001,\n","                                           min_split_gain=0.0, n_estimators=100,\n","                                           n_jobs=-1, num_leaves=31,\n","                                           objective=None, random_state=2441,\n","                                           reg_alpha=0.0, reg_lambda=0.0,\n","                                           silent='warn', subsample=1.0,\n","                                           subsample_for_bin=200000,\n","                                           subsample_freq=0))],\n","                n_jobs=-1, verbose=False, weights=None), fit_kwargs=None, groups=None, model_only=True, display=None, experiment_custom_tags=None, return_train_score=False)\n","INFO:logs:Finalizing VotingRegressor(estimators=[('rf',\n","                             RandomForestRegressor(bootstrap=True,\n","                                                   ccp_alpha=0.0,\n","                                                   criterion='mse',\n","                                                   max_depth=None,\n","                                                   max_features='auto',\n","                                                   max_leaf_nodes=None,\n","                                                   max_samples=None,\n","                                                   min_impurity_decrease=0.0,\n","                                                   min_impurity_split=None,\n","                                                   min_samples_leaf=1,\n","                                                   min_samples_split=2,\n","                                                   min_weight_fraction_leaf=0.0,\n","                                                   n_estimators=100, n_jobs=-1,\n","                                                   oob_score=False,\n","                                                   random_state=244...\n","                                           colsample_bytree=1.0,\n","                                           importance_type='split',\n","                                           learning_rate=0.1, max_depth=-1,\n","                                           min_child_samples=20,\n","                                           min_child_weight=0.001,\n","                                           min_split_gain=0.0, n_estimators=100,\n","                                           n_jobs=-1, num_leaves=31,\n","                                           objective=None, random_state=2441,\n","                                           reg_alpha=0.0, reg_lambda=0.0,\n","                                           silent='warn', subsample=1.0,\n","                                           subsample_for_bin=200000,\n","                                           subsample_freq=0))],\n","                n_jobs=-1, verbose=False, weights=None)\n","INFO:logs:Initializing create_model()\n","INFO:logs:create_model(estimator=VotingRegressor(estimators=[('rf',\n","                             RandomForestRegressor(bootstrap=True,\n","                                                   ccp_alpha=0.0,\n","                                                   criterion='mse',\n","                                                   max_depth=None,\n","                                                   max_features='auto',\n","                                                   max_leaf_nodes=None,\n","                                                   max_samples=None,\n","                                                   min_impurity_decrease=0.0,\n","                                                   min_impurity_split=None,\n","                                                   min_samples_leaf=1,\n","                                                   min_samples_split=2,\n","                                                   min_weight_fraction_leaf=0.0,\n","                                                   n_estimators=100, n_jobs=-1,\n","                                                   oob_score=False,\n","                                                   random_state=244...\n","                                           colsample_bytree=1.0,\n","                                           importance_type='split',\n","                                           learning_rate=0.1, max_depth=-1,\n","                                           min_child_samples=20,\n","                                           min_child_weight=0.001,\n","                                           min_split_gain=0.0, n_estimators=100,\n","                                           n_jobs=-1, num_leaves=31,\n","                                           objective=None, random_state=2441,\n","                                           reg_alpha=0.0, reg_lambda=0.0,\n","                                           silent='warn', subsample=1.0,\n","                                           subsample_for_bin=200000,\n","                                           subsample_freq=0))],\n","                n_jobs=-1, verbose=False, weights=None), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=False, probability_threshold=None, display=None, return_train_score=False, kwargs={})\n","INFO:logs:Checking exceptions\n","INFO:logs:Importing libraries\n","INFO:logs:Copying training dataset\n","INFO:logs:Defining folds\n","INFO:logs:Declaring metric variables\n","INFO:logs:Importing untrained model\n","INFO:logs:Declaring custom model\n","INFO:logs:Voting Regressor Imported succesfully\n","INFO:logs:Starting cross validation\n","INFO:logs:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1\n","INFO:logs:Calculating mean and std\n","INFO:logs:Creating metrics dataframe\n","INFO:logs:Finalizing model\n","INFO:logs:create_model_container: 19\n","INFO:logs:master_model_container: 19\n","INFO:logs:display_container: 5\n","INFO:logs:VotingRegressor(estimators=[('rf',\n","                             RandomForestRegressor(bootstrap=True,\n","                                                   ccp_alpha=0.0,\n","                                                   criterion='mse',\n","                                                   max_depth=None,\n","                                                   max_features='auto',\n","                                                   max_leaf_nodes=None,\n","                                                   max_samples=None,\n","                                                   min_impurity_decrease=0.0,\n","                                                   min_impurity_split=None,\n","                                                   min_samples_leaf=1,\n","                                                   min_samples_split=2,\n","                                                   min_weight_fraction_leaf=0.0,\n","                                                   n_estimators=100, n_jobs=-1,\n","                                                   oob_score=False,\n","                                                   random_state=244...\n","                                           colsample_bytree=1.0,\n","                                           importance_type='split',\n","                                           learning_rate=0.1, max_depth=-1,\n","                                           min_child_samples=20,\n","                                           min_child_weight=0.001,\n","                                           min_split_gain=0.0, n_estimators=100,\n","                                           n_jobs=-1, num_leaves=31,\n","                                           objective=None, random_state=2441,\n","                                           reg_alpha=0.0, reg_lambda=0.0,\n","                                           silent='warn', subsample=1.0,\n","                                           subsample_for_bin=200000,\n","                                           subsample_freq=0))],\n","                n_jobs=-1, verbose=False, weights=None)\n","INFO:logs:create_model() succesfully completed......................................\n","INFO:logs:create_model_container: 19\n","INFO:logs:master_model_container: 19\n","INFO:logs:display_container: 4\n","INFO:logs:VotingRegressor(estimators=[('rf',\n","                             RandomForestRegressor(bootstrap=True,\n","                                                   ccp_alpha=0.0,\n","                                                   criterion='mse',\n","                                                   max_depth=None,\n","                                                   max_features='auto',\n","                                                   max_leaf_nodes=None,\n","                                                   max_samples=None,\n","                                                   min_impurity_decrease=0.0,\n","                                                   min_impurity_split=None,\n","                                                   min_samples_leaf=1,\n","                                                   min_samples_split=2,\n","                                                   min_weight_fraction_leaf=0.0,\n","                                                   n_estimators=100, n_jobs=-1,\n","                                                   oob_score=False,\n","                                                   random_state=244...\n","                                           colsample_bytree=1.0,\n","                                           importance_type='split',\n","                                           learning_rate=0.1, max_depth=-1,\n","                                           min_child_samples=20,\n","                                           min_child_weight=0.001,\n","                                           min_split_gain=0.0, n_estimators=100,\n","                                           n_jobs=-1, num_leaves=31,\n","                                           objective=None, random_state=2441,\n","                                           reg_alpha=0.0, reg_lambda=0.0,\n","                                           silent='warn', subsample=1.0,\n","                                           subsample_for_bin=200000,\n","                                           subsample_freq=0))],\n","                n_jobs=-1, verbose=False, weights=None)\n","INFO:logs:finalize_model() succesfully completed......................................\n"]}]},{"cell_type":"code","source":["predictions = predict_model(final_model, data = dn_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CiMRuo0fstV7","executionInfo":{"status":"ok","timestamp":1660053477671,"user_tz":-540,"elapsed":505,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"f386ff23-5c31-4b8b-ce17-b4a117d5397c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["INFO:logs:Initializing predict_model()\n","INFO:logs:predict_model(estimator=VotingRegressor(estimators=[('rf',\n","                             RandomForestRegressor(bootstrap=True,\n","                                                   ccp_alpha=0.0,\n","                                                   criterion='mse',\n","                                                   max_depth=None,\n","                                                   max_features='auto',\n","                                                   max_leaf_nodes=None,\n","                                                   max_samples=None,\n","                                                   min_impurity_decrease=0.0,\n","                                                   min_impurity_split=None,\n","                                                   min_samples_leaf=1,\n","                                                   min_samples_split=2,\n","                                                   min_weight_fraction_leaf=0.0,\n","                                                   n_estimators=100, n_jobs=-1,\n","                                                   oob_score=False,\n","                                                   random_state=244...\n","                                           colsample_bytree=1.0,\n","                                           importance_type='split',\n","                                           learning_rate=0.1, max_depth=-1,\n","                                           min_child_samples=20,\n","                                           min_child_weight=0.001,\n","                                           min_split_gain=0.0, n_estimators=100,\n","                                           n_jobs=-1, num_leaves=31,\n","                                           objective=None, random_state=2441,\n","                                           reg_alpha=0.0, reg_lambda=0.0,\n","                                           silent='warn', subsample=1.0,\n","                                           subsample_for_bin=200000,\n","                                           subsample_freq=0))],\n","                n_jobs=-1, verbose=False, weights=None), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)\n","INFO:logs:Checking exceptions\n","INFO:logs:Preloading libraries\n","INFO:logs:Preparing display monitor\n"]}]},{"cell_type":"code","source":["submission['석식계'] = predictions['Label']"],"metadata":{"id":"IJH29KcRsw84"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["submission"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"RoEMKsnXsza1","executionInfo":{"status":"ok","timestamp":1660053477695,"user_tz":-540,"elapsed":55,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"c1557999-e5e0-4bd6-db65-993bcf97cb25"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            일자          중식계         석식계\n","0   2021-01-27   926.516880  399.068826\n","1   2021-01-28   919.472665  512.669130\n","2   2021-01-29   626.996916  279.751375\n","3   2021-02-01  1218.727343  533.952733\n","4   2021-02-02   937.164722  533.960402\n","5   2021-02-03   991.804435  478.078717\n","6   2021-02-04   891.538411  526.020719\n","7   2021-02-05   671.145700  340.612176\n","8   2021-02-08  1198.542447  629.120016\n","9   2021-02-09   961.594207  515.790671\n","10  2021-02-10   851.107276  353.569255\n","11  2021-02-15  1263.729224  667.411591\n","12  2021-02-16  1127.278348  661.327007\n","13  2021-02-17   922.132995  406.820853\n","14  2021-02-18   936.240817  542.788097\n","15  2021-02-19   637.393625  346.428091\n","16  2021-02-22  1271.098132  670.113236\n","17  2021-02-23  1034.677252  593.937960\n","18  2021-02-24   941.122146  442.428200\n","19  2021-02-25   934.256456  547.233667\n","20  2021-02-26   653.176168  332.246809\n","21  2021-03-02   999.967370  554.242914\n","22  2021-03-03   849.883599  383.917520\n","23  2021-03-04   924.360433  485.922160\n","24  2021-03-05   617.851358  325.453580\n","25  2021-03-08  1236.247221  609.865600\n","26  2021-03-09  1021.530245  588.331851\n","27  2021-03-10   855.158051  419.358983\n","28  2021-03-11   893.436656  512.196372\n","29  2021-03-12   640.822960  326.604370\n","30  2021-03-15  1263.195008  666.852715\n","31  2021-03-16  1044.089515  599.959340\n","32  2021-03-17   956.714611  444.547638\n","33  2021-03-18   898.092937  507.748800\n","34  2021-03-19   650.569819  327.035715\n","35  2021-03-22  1254.931250  605.393962\n","36  2021-03-23  1035.403778  614.650719\n","37  2021-03-24   936.541765  440.588215\n","38  2021-03-25   881.439163  494.837936\n","39  2021-03-26   645.974286  286.089645\n","40  2021-03-29  1316.292976  599.684192\n","41  2021-03-30  1000.407603  524.919389\n","42  2021-03-31   908.012804  475.443932\n","43  2021-04-01   886.855521  487.045052\n","44  2021-04-02   681.292113  334.651269\n","45  2021-04-05  1202.139457  603.869446\n","46  2021-04-06  1049.831811  607.180800\n","47  2021-04-07   942.500890  441.130118\n","48  2021-04-08   899.284328  458.884123\n","49  2021-04-09   666.815883  356.304602"],"text/html":["\n","  <div id=\"df-ccc5c7b8-c518-4992-b350-10cc4b4e2741\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>일자</th>\n","      <th>중식계</th>\n","      <th>석식계</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2021-01-27</td>\n","      <td>926.516880</td>\n","      <td>399.068826</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2021-01-28</td>\n","      <td>919.472665</td>\n","      <td>512.669130</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2021-01-29</td>\n","      <td>626.996916</td>\n","      <td>279.751375</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2021-02-01</td>\n","      <td>1218.727343</td>\n","      <td>533.952733</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2021-02-02</td>\n","      <td>937.164722</td>\n","      <td>533.960402</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2021-02-03</td>\n","      <td>991.804435</td>\n","      <td>478.078717</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2021-02-04</td>\n","      <td>891.538411</td>\n","      <td>526.020719</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2021-02-05</td>\n","      <td>671.145700</td>\n","      <td>340.612176</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2021-02-08</td>\n","      <td>1198.542447</td>\n","      <td>629.120016</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2021-02-09</td>\n","      <td>961.594207</td>\n","      <td>515.790671</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>2021-02-10</td>\n","      <td>851.107276</td>\n","      <td>353.569255</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>2021-02-15</td>\n","      <td>1263.729224</td>\n","      <td>667.411591</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>2021-02-16</td>\n","      <td>1127.278348</td>\n","      <td>661.327007</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>2021-02-17</td>\n","      <td>922.132995</td>\n","      <td>406.820853</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>2021-02-18</td>\n","      <td>936.240817</td>\n","      <td>542.788097</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>2021-02-19</td>\n","      <td>637.393625</td>\n","      <td>346.428091</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>2021-02-22</td>\n","      <td>1271.098132</td>\n","      <td>670.113236</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>2021-02-23</td>\n","      <td>1034.677252</td>\n","      <td>593.937960</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>2021-02-24</td>\n","      <td>941.122146</td>\n","      <td>442.428200</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>2021-02-25</td>\n","      <td>934.256456</td>\n","      <td>547.233667</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>2021-02-26</td>\n","      <td>653.176168</td>\n","      <td>332.246809</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>2021-03-02</td>\n","      <td>999.967370</td>\n","      <td>554.242914</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>2021-03-03</td>\n","      <td>849.883599</td>\n","      <td>383.917520</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>2021-03-04</td>\n","      <td>924.360433</td>\n","      <td>485.922160</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>2021-03-05</td>\n","      <td>617.851358</td>\n","      <td>325.453580</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>2021-03-08</td>\n","      <td>1236.247221</td>\n","      <td>609.865600</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>2021-03-09</td>\n","      <td>1021.530245</td>\n","      <td>588.331851</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>2021-03-10</td>\n","      <td>855.158051</td>\n","      <td>419.358983</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>2021-03-11</td>\n","      <td>893.436656</td>\n","      <td>512.196372</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>2021-03-12</td>\n","      <td>640.822960</td>\n","      <td>326.604370</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>2021-03-15</td>\n","      <td>1263.195008</td>\n","      <td>666.852715</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>2021-03-16</td>\n","      <td>1044.089515</td>\n","      <td>599.959340</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>2021-03-17</td>\n","      <td>956.714611</td>\n","      <td>444.547638</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>2021-03-18</td>\n","      <td>898.092937</td>\n","      <td>507.748800</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>2021-03-19</td>\n","      <td>650.569819</td>\n","      <td>327.035715</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>2021-03-22</td>\n","      <td>1254.931250</td>\n","      <td>605.393962</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>2021-03-23</td>\n","      <td>1035.403778</td>\n","      <td>614.650719</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>2021-03-24</td>\n","      <td>936.541765</td>\n","      <td>440.588215</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>2021-03-25</td>\n","      <td>881.439163</td>\n","      <td>494.837936</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>2021-03-26</td>\n","      <td>645.974286</td>\n","      <td>286.089645</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>2021-03-29</td>\n","      <td>1316.292976</td>\n","      <td>599.684192</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>2021-03-30</td>\n","      <td>1000.407603</td>\n","      <td>524.919389</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>2021-03-31</td>\n","      <td>908.012804</td>\n","      <td>475.443932</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>2021-04-01</td>\n","      <td>886.855521</td>\n","      <td>487.045052</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>2021-04-02</td>\n","      <td>681.292113</td>\n","      <td>334.651269</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>2021-04-05</td>\n","      <td>1202.139457</td>\n","      <td>603.869446</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>2021-04-06</td>\n","      <td>1049.831811</td>\n","      <td>607.180800</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>2021-04-07</td>\n","      <td>942.500890</td>\n","      <td>441.130118</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>2021-04-08</td>\n","      <td>899.284328</td>\n","      <td>458.884123</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>2021-04-09</td>\n","      <td>666.815883</td>\n","      <td>356.304602</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ccc5c7b8-c518-4992-b350-10cc4b4e2741')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ccc5c7b8-c518-4992-b350-10cc4b4e2741 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ccc5c7b8-c518-4992-b350-10cc4b4e2741');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["submission.to_csv('/content/drive/MyDrive/데이터분석 스터디/data/Pycaret.csv', index=False)"],"metadata":{"id":"rWytqnkoV2wq"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["92.84861 (387등) "],"metadata":{"id":"-KrAMIjrWr9S"}}]}