{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"XGBoost","provenance":[{"file_id":"1TZLyiVeHUvHhzHVd2JfpGZutCbA-4dbE","timestamp":1658592418910}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["# 한글 폰트 설정\n","# 한글 폰트 설치 코드\n","#!apt-get update -qq\n","#!apt-get install fonts-nanum* -qq\n","# 설치 후 런타임 재시작 필요"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dVucejDexK1C","executionInfo":{"status":"ok","timestamp":1660045650949,"user_tz":-540,"elapsed":24685,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"697d743e-1ec1-43df-905a-6dd226cbcc2a"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Selecting previously unselected package fonts-nanum.\n","(Reading database ... 155680 files and directories currently installed.)\n","Preparing to unpack .../fonts-nanum_20170925-1_all.deb ...\n","Unpacking fonts-nanum (20170925-1) ...\n","Selecting previously unselected package fonts-nanum-eco.\n","Preparing to unpack .../fonts-nanum-eco_1.000-6_all.deb ...\n","Unpacking fonts-nanum-eco (1.000-6) ...\n","Selecting previously unselected package fonts-nanum-extra.\n","Preparing to unpack .../fonts-nanum-extra_20170925-1_all.deb ...\n","Unpacking fonts-nanum-extra (20170925-1) ...\n","Selecting previously unselected package fonts-nanum-coding.\n","Preparing to unpack .../fonts-nanum-coding_2.5-1_all.deb ...\n","Unpacking fonts-nanum-coding (2.5-1) ...\n","Setting up fonts-nanum-extra (20170925-1) ...\n","Setting up fonts-nanum (20170925-1) ...\n","Setting up fonts-nanum-coding (2.5-1) ...\n","Setting up fonts-nanum-eco (1.000-6) ...\n","Processing triggers for fontconfig (2.12.6-0ubuntu2) ...\n"]}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rCwTBmbr6hCa","executionInfo":{"status":"ok","timestamp":1660045800231,"user_tz":-540,"elapsed":35513,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"a29a6de8-3896-4567-e36e-d1289e7fb900"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["# 한글폰트 사용 in colab\n","%matplotlib inline  \n","\n","import matplotlib as mpl \n","import matplotlib.pyplot as plt \n","import matplotlib.font_manager as fm  \n","\n","path = '/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf' \n","font_name = fm.FontProperties(fname=path, size=10).get_name()\n","print(font_name)\n","plt.rc('font', family=font_name)\n","\n","fm._rebuild()\n","mpl.rcParams['axes.unicode_minus'] = False"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5SFJda3UxPKZ","executionInfo":{"status":"ok","timestamp":1660046319141,"user_tz":-540,"elapsed":807,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"8607e0f8-63af-4cf0-f1b7-f74706b36afd"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["NanumBarunGothic\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n"," \n","# 한글 폰트 사용을 위해서 세팅\n","from matplotlib import font_manager, rc\n","font_path = '/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf' \n","font = font_manager.FontProperties(fname=font_path).get_name()\n","rc('font', family=font)"],"metadata":{"id":"iEso6xS0ggM0","executionInfo":{"status":"ok","timestamp":1660046959985,"user_tz":-540,"elapsed":335,"user":{"displayName":"민경","userId":"02303904424890854019"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":582},"id":"2hvxXBfrUPOV","executionInfo":{"status":"ok","timestamp":1660047402204,"user_tz":-540,"elapsed":31,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"6980e4c8-b97f-4bb7-ee54-6ae7ca9ae563"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["           일자 요일  본사정원수  본사휴가자수  본사출장자수  본사시간외근무명령서승인건수  현본사소속재택근무자수     중식계  \\\n","0  2016-02-01  월   2601      50     150             238          0.0  1039.0   \n","1  2016-02-02  화   2601      50     173             319          0.0   867.0   \n","2  2016-02-03  수   2601      56     180             111          0.0  1017.0   \n","3  2016-02-04  목   2601     104     220             355          0.0   978.0   \n","4  2016-02-05  금   2601     278     181              34          0.0   925.0   \n","\n","     석식계  break_score  lunch_score  dinner_score    출근자수      야근비율  \n","0  331.0            0            4             4  2401.0  0.091503  \n","1  560.0            0           12             8  2378.0  0.122645  \n","2  573.0            0            5             4  2365.0  0.042676  \n","3  525.0            0            9             5  2277.0  0.136486  \n","4  330.0            0            5            12  2142.0  0.013072  "],"text/html":["\n","  <div id=\"df-bb3d4dc2-a3fe-4694-9ed4-9f1e492acb0d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>일자</th>\n","      <th>요일</th>\n","      <th>본사정원수</th>\n","      <th>본사휴가자수</th>\n","      <th>본사출장자수</th>\n","      <th>본사시간외근무명령서승인건수</th>\n","      <th>현본사소속재택근무자수</th>\n","      <th>중식계</th>\n","      <th>석식계</th>\n","      <th>break_score</th>\n","      <th>lunch_score</th>\n","      <th>dinner_score</th>\n","      <th>출근자수</th>\n","      <th>야근비율</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2016-02-01</td>\n","      <td>월</td>\n","      <td>2601</td>\n","      <td>50</td>\n","      <td>150</td>\n","      <td>238</td>\n","      <td>0.0</td>\n","      <td>1039.0</td>\n","      <td>331.0</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>2401.0</td>\n","      <td>0.091503</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2016-02-02</td>\n","      <td>화</td>\n","      <td>2601</td>\n","      <td>50</td>\n","      <td>173</td>\n","      <td>319</td>\n","      <td>0.0</td>\n","      <td>867.0</td>\n","      <td>560.0</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>8</td>\n","      <td>2378.0</td>\n","      <td>0.122645</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2016-02-03</td>\n","      <td>수</td>\n","      <td>2601</td>\n","      <td>56</td>\n","      <td>180</td>\n","      <td>111</td>\n","      <td>0.0</td>\n","      <td>1017.0</td>\n","      <td>573.0</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>2365.0</td>\n","      <td>0.042676</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2016-02-04</td>\n","      <td>목</td>\n","      <td>2601</td>\n","      <td>104</td>\n","      <td>220</td>\n","      <td>355</td>\n","      <td>0.0</td>\n","      <td>978.0</td>\n","      <td>525.0</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>5</td>\n","      <td>2277.0</td>\n","      <td>0.136486</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2016-02-05</td>\n","      <td>금</td>\n","      <td>2601</td>\n","      <td>278</td>\n","      <td>181</td>\n","      <td>34</td>\n","      <td>0.0</td>\n","      <td>925.0</td>\n","      <td>330.0</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>12</td>\n","      <td>2142.0</td>\n","      <td>0.013072</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bb3d4dc2-a3fe-4694-9ed4-9f1e492acb0d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bb3d4dc2-a3fe-4694-9ed4-9f1e492acb0d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bb3d4dc2-a3fe-4694-9ed4-9f1e492acb0d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":23}],"source":["import pandas as pd\n","plt.rcParams['axes.unicode_minus'] = False # 마이너스 표시\n","# 데이터 불러오기\n","data = pd.read_csv('/content/drive/MyDrive/데이터분석 스터디/data/data_add_score.csv')\n","submission = pd.read_csv('/content/drive/MyDrive/데이터분석 스터디/data/sample_submission.csv')\n","\n","data['출근자수'] = data['본사정원수'] - data['본사휴가자수'] - data['본사출장자수'] - data['현본사소속재택근무자수']\n","data['야근비율'] = data['본사시간외근무명령서승인건수'] / data['본사정원수']\n","\n","train = data.iloc[:1204] \n","test = data.iloc[1204:]\n","\n","train.head()"]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","from xgboost import XGBRegressor , plot_importance\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import explained_variance_score"],"metadata":{"id":"FdXEjbjZU56Y","executionInfo":{"status":"ok","timestamp":1660047406359,"user_tz":-540,"elapsed":424,"user":{"displayName":"민경","userId":"02303904424890854019"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["# 변수 선택\n","x_train = train[['요일', '출근자수', '야근비율', 'lunch_score', 'dinner_score']]\n","x_test = test[['요일', '출근자수', '야근비율', 'lunch_score', 'dinner_score']]\n","#x_train = pd.get_dummies(x_train, columns = ['요일'])\n","#x_test = pd.get_dummies(x_test, columns = ['요일'])\n","x_train['요일'] = x_train['요일'].map({'월':0, '화':1, '수':2, '목':3, '금':4})\n","x_test['요일'] = x_test['요일'].map({'월':0, '화':1, '수':2, '목':3, '금':4})\n","y1_train = train['중식계']\n","y2_train = train['석식계']\n","y1_test = test['중식계']\n","y2_test = test['석식계']"],"metadata":{"id":"2T21mzpeVe6e","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1660047408769,"user_tz":-540,"elapsed":493,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"7dffb9c0-85ce-41a3-ea43-f4b11e57eafc"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:6: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:7: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  import sys\n"]}]},{"cell_type":"markdown","source":["### GridSearchCV"],"metadata":{"id":"MG1oeBSx7ous"}},{"cell_type":"code","source":["from sklearn.model_selection import GridSearchCV,KFold"],"metadata":{"id":"ucIRv2fi7tpx","executionInfo":{"status":"ok","timestamp":1660047416619,"user_tz":-540,"elapsed":572,"user":{"displayName":"민경","userId":"02303904424890854019"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["param_grid={'booster' :['gbtree'],\n","                 'silent':[True],\n","                 'max_depth':[5,6,7,8],\n","                 'min_child_weight':[1,3,5],\n","                 'gamma':[0,1,2,3],\n","                 'colsample_bytree':[0.5,0.8,1],\n","                 'colsample_bylevel':[0.9],\n","                 'n_estimators':[50,100]}"],"metadata":{"id":"1S8Hc9O476_j","executionInfo":{"status":"ok","timestamp":1660047417053,"user_tz":-540,"elapsed":5,"user":{"displayName":"민경","userId":"02303904424890854019"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["# 점심/저녁 식수 인원 예측할 모델 2개 생성\n","xgb_lunch = XGBRegressor()\n","xgb_dinner = XGBRegressor()"],"metadata":{"id":"nCE0_ERKVmzT","executionInfo":{"status":"ok","timestamp":1660047419884,"user_tz":-540,"elapsed":496,"user":{"displayName":"민경","userId":"02303904424890854019"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["cv = KFold(n_splits=6)\n","gcv1=GridSearchCV(xgb_lunch, param_grid=param_grid, cv=cv, scoring='neg_mean_absolute_error', n_jobs=-1)\n","gcv2=GridSearchCV(xgb_dinner, param_grid=param_grid, cv=cv, scoring='neg_mean_absolute_error', n_jobs=-1)"],"metadata":{"id":"j8iwhfG_8uE0","executionInfo":{"status":"ok","timestamp":1660047420807,"user_tz":-540,"elapsed":10,"user":{"displayName":"민경","userId":"02303904424890854019"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["gcv1.fit(x_train, y1_train)\n","print('final params', gcv1.best_params_)   # 최적의 파라미터 값 출력\n","print('best score', gcv1.best_score_)      # 최고의 점수"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xrXFwWcZ86-V","executionInfo":{"status":"ok","timestamp":1660047519871,"user_tz":-540,"elapsed":97906,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"b7cd6d41-de50-4565-c447-f8451493b8cf"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["final params {'booster': 'gbtree', 'colsample_bylevel': 0.9, 'colsample_bytree': 1, 'gamma': 0, 'max_depth': 5, 'min_child_weight': 5, 'n_estimators': 50, 'silent': True}\n","best score -91.82670474835295\n"]}]},{"cell_type":"code","source":["gcv2.fit(x_train, y2_train)\n","print('final params', gcv2.best_params_)   # 최적의 파라미터 값 출력\n","print('best score', gcv2.best_score_)      # 최고의 점수"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Zx9LKjpo9UQk","executionInfo":{"status":"ok","timestamp":1660047603994,"user_tz":-540,"elapsed":84139,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"876a55ce-f3b3-4364-dd71-177c0cdac4dd"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["final params {'booster': 'gbtree', 'colsample_bylevel': 0.9, 'colsample_bytree': 0.8, 'gamma': 0, 'max_depth': 6, 'min_child_weight': 5, 'n_estimators': 50, 'silent': True}\n","best score -66.96948316794526\n"]}]},{"cell_type":"code","source":["# 학습\n","lunch_model = gcv1.best_estimator_\n","dinner_model = gcv2.best_estimator_"],"metadata":{"id":"wmYbPKcqVp3f","executionInfo":{"status":"ok","timestamp":1660047604013,"user_tz":-540,"elapsed":694,"user":{"displayName":"민경","userId":"02303904424890854019"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["# 추론\n","pred1 = lunch_model.predict(x_test)\n","pred2 = dinner_model.predict(x_test)"],"metadata":{"id":"VUD5iE57Vrgp","executionInfo":{"status":"ok","timestamp":1660047604018,"user_tz":-540,"elapsed":678,"user":{"displayName":"민경","userId":"02303904424890854019"}}},"execution_count":33,"outputs":[]},{"cell_type":"markdown","source":["### 피처 중요도 확인"],"metadata":{"id":"RFsiUUb1wfbQ"}},{"cell_type":"code","source":["plot_importance(lunch_model)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":990},"id":"xgIYxXE_wex3","executionInfo":{"status":"ok","timestamp":1660047604019,"user_tz":-540,"elapsed":669,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"1ac35127-08d1-4342-b5aa-83332dd437c7"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f488ddf41d0>"]},"metadata":{},"execution_count":34},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 50836 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 51068 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 50556 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 44540 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 48708 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 50984 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 52636 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 51088 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 49688 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 50836 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 51068 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 50556 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 44540 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 48708 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 50984 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 52636 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 51088 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 49688 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plot_importance(dinner_model)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":990},"id":"HG0nQo9pwvnC","executionInfo":{"status":"ok","timestamp":1660047628802,"user_tz":-540,"elapsed":357,"user":{"displayName":"민경","userId":"02303904424890854019"}},"outputId":"a3ee3935-7830-4852-dd60-5fd3fbfbf4ea"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f488bed98d0>"]},"metadata":{},"execution_count":35},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 50836 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 51068 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 52636 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 44540 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 51088 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 49688 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 50556 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 48708 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 50984 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 50836 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 51068 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 52636 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 44540 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 51088 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 49688 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 50556 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 48708 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 50984 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# 결과 제출\n","submission['중식계'] = pred1\n","submission['석식계'] = pred2"],"metadata":{"id":"YSaU5oEZV0dc","executionInfo":{"status":"ok","timestamp":1660047633930,"user_tz":-540,"elapsed":403,"user":{"displayName":"민경","userId":"02303904424890854019"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["submission.to_csv('xgb+feature_selection.csv', index=False)"],"metadata":{"id":"rWytqnkoV2wq","executionInfo":{"status":"ok","timestamp":1660047636000,"user_tz":-540,"elapsed":330,"user":{"displayName":"민경","userId":"02303904424890854019"}}},"execution_count":37,"outputs":[]},{"cell_type":"markdown","source":["98.91071 (449등) "],"metadata":{"id":"-KrAMIjrWr9S"}},{"cell_type":"code","source":[""],"metadata":{"id":"zUBQXmEkjxtX"},"execution_count":null,"outputs":[]}]}